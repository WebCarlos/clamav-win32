//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Assembly Writer Source Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void X86IntelInstPrinter::printInstruction(const MachineInstr *MI) {
  static const unsigned OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// DBG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1U,	// ABS_F
    0U,	// ABS_Fp32
    0U,	// ABS_Fp64
    0U,	// ABS_Fp80
    134217734U,	// ADC16i16
    272629776U,	// ADC16mi
    272629776U,	// ADC16mi8
    272629776U,	// ADC16mr
    138543120U,	// ADC16ri
    138543120U,	// ADC16ri8
    138674192U,	// ADC16rm
    138543120U,	// ADC16rr
    134217749U,	// ADC32i32
    406847504U,	// ADC32mi
    406847504U,	// ADC32mi8
    406847504U,	// ADC32mr
    138543120U,	// ADC32ri
    138543120U,	// ADC32ri8
    138805264U,	// ADC32rm
    138543120U,	// ADC32rr
    134217760U,	// ADC64i32
    541065232U,	// ADC64mi32
    541065232U,	// ADC64mi8
    541065232U,	// ADC64mr
    138543120U,	// ADC64ri32
    138543120U,	// ADC64ri8
    138936336U,	// ADC64rm
    138543120U,	// ADC64rr
    134217771U,	// ADC8i8
    675282960U,	// ADC8mi
    675282960U,	// ADC8mr
    138543120U,	// ADC8ri
    139067408U,	// ADC8rm
    138543120U,	// ADC8rr
    134217781U,	// ADD16i16
    272629823U,	// ADD16mi
    272629823U,	// ADD16mi8
    272629823U,	// ADD16mr
    138543167U,	// ADD16mrmrr
    138543167U,	// ADD16ri
    138543167U,	// ADD16ri8
    138674239U,	// ADD16rm
    138543167U,	// ADD16rr
    134217796U,	// ADD32i32
    406847551U,	// ADD32mi
    406847551U,	// ADD32mi8
    406847551U,	// ADD32mr
    138543167U,	// ADD32mrmrr
    138543167U,	// ADD32ri
    138543167U,	// ADD32ri8
    138805311U,	// ADD32rm
    138543167U,	// ADD32rr
    134217807U,	// ADD64i32
    541065279U,	// ADD64mi32
    541065279U,	// ADD64mi8
    541065279U,	// ADD64mr
    138543167U,	// ADD64mrmrr
    138543167U,	// ADD64ri32
    138543167U,	// ADD64ri8
    138936383U,	// ADD64rm
    138543167U,	// ADD64rr
    134217818U,	// ADD8i8
    675283007U,	// ADD8mi
    675283007U,	// ADD8mr
    138543167U,	// ADD8mrmrr
    138543167U,	// ADD8ri
    139067455U,	// ADD8rm
    138543167U,	// ADD8rr
    139198564U,	// ADDPDrm
    138543204U,	// ADDPDrr
    139198571U,	// ADDPSrm
    138543211U,	// ADDPSrr
    139329650U,	// ADDSDrm
    139329650U,	// ADDSDrm_Int
    138543218U,	// ADDSDrr
    138543218U,	// ADDSDrr_Int
    139460729U,	// ADDSSrm
    139460729U,	// ADDSSrm_Int
    138543225U,	// ADDSSrr
    138543225U,	// ADDSSrr_Int
    139198592U,	// ADDSUBPDrm
    138543232U,	// ADDSUBPDrr
    139198602U,	// ADDSUBPSrm
    138543242U,	// ADDSUBPSrr
    805306516U,	// ADD_F32m
    939524244U,	// ADD_F64m
    268435610U,	// ADD_FI16m
    402653338U,	// ADD_FI32m
    134217889U,	// ADD_FPrST0
    134217876U,	// ADD_FST0r
    0U,	// ADD_Fp32
    0U,	// ADD_Fp32m
    0U,	// ADD_Fp64
    0U,	// ADD_Fp64m
    0U,	// ADD_Fp64m32
    0U,	// ADD_Fp80
    0U,	// ADD_Fp80m32
    0U,	// ADD_Fp80m64
    0U,	// ADD_FpI16m32
    0U,	// ADD_FpI16m64
    0U,	// ADD_FpI16m80
    0U,	// ADD_FpI32m32
    0U,	// ADD_FpI32m64
    0U,	// ADD_FpI32m80
    142606484U,	// ADD_FrST0
    168U,	// ADJCALLSTACKDOWN32
    168U,	// ADJCALLSTACKDOWN64
    186U,	// ADJCALLSTACKUP32
    186U,	// ADJCALLSTACKUP64
    134217930U,	// AND16i16
    272629972U,	// AND16mi
    272629972U,	// AND16mi8
    272629972U,	// AND16mr
    138543316U,	// AND16ri
    138543316U,	// AND16ri8
    138674388U,	// AND16rm
    138543316U,	// AND16rr
    134217945U,	// AND32i32
    406847700U,	// AND32mi
    406847700U,	// AND32mi8
    406847700U,	// AND32mr
    138543316U,	// AND32ri
    138543316U,	// AND32ri8
    138805460U,	// AND32rm
    138543316U,	// AND32rr
    134217956U,	// AND64i32
    541065428U,	// AND64mi32
    541065428U,	// AND64mi8
    541065428U,	// AND64mr
    138543316U,	// AND64ri32
    138543316U,	// AND64ri8
    138936532U,	// AND64rm
    138543316U,	// AND64rr
    134217967U,	// AND8i8
    675283156U,	// AND8mi
    675283156U,	// AND8mr
    138543316U,	// AND8ri
    139067604U,	// AND8rm
    138543316U,	// AND8rr
    139198713U,	// ANDNPDrm
    138543353U,	// ANDNPDrr
    139198721U,	// ANDNPSrm
    138543361U,	// ANDNPSrr
    139198729U,	// ANDPDrm
    138543369U,	// ANDPDrr
    139198736U,	// ANDPSrm
    138543376U,	// ANDPSrr
    279U,	// ATOMADD6432
    300U,	// ATOMAND16
    319U,	// ATOMAND32
    338U,	// ATOMAND64
    357U,	// ATOMAND6432
    378U,	// ATOMAND8
    396U,	// ATOMMAX16
    415U,	// ATOMMAX32
    434U,	// ATOMMAX64
    453U,	// ATOMMIN16
    472U,	// ATOMMIN32
    491U,	// ATOMMIN64
    510U,	// ATOMNAND16
    530U,	// ATOMNAND32
    550U,	// ATOMNAND64
    570U,	// ATOMNAND6432
    592U,	// ATOMNAND8
    611U,	// ATOMOR16
    629U,	// ATOMOR32
    647U,	// ATOMOR64
    665U,	// ATOMOR6432
    685U,	// ATOMOR8
    702U,	// ATOMSUB6432
    723U,	// ATOMSWAP6432
    745U,	// ATOMUMAX16
    765U,	// ATOMUMAX32
    785U,	// ATOMUMAX64
    805U,	// ATOMUMIN16
    825U,	// ATOMUMIN32
    845U,	// ATOMUMIN64
    865U,	// ATOMXOR16
    884U,	// ATOMXOR32
    903U,	// ATOMXOR64
    922U,	// ATOMXOR6432
    943U,	// ATOMXOR8
    139609025U,	// BLENDPDrmi
    138560449U,	// BLENDPDrri
    139609034U,	// BLENDPSrmi
    138560458U,	// BLENDPSrri
    139625427U,	// BLENDVPDrm0
    138576851U,	// BLENDVPDrr0
    139625437U,	// BLENDVPSrm0
    138576861U,	// BLENDVPSrr0
    139723751U,	// BSF16rm
    139854823U,	// BSF16rr
    139985895U,	// BSF32rm
    139854823U,	// BSF32rr
    140116967U,	// BSF64rm
    139854823U,	// BSF64rr
    139723756U,	// BSR16rm
    139854828U,	// BSR16rr
    139985900U,	// BSR32rm
    139854828U,	// BSR32rr
    140116972U,	// BSR64rm
    139854828U,	// BSR64rr
    134218737U,	// BSWAP32r
    134218737U,	// BSWAP64r
    272630776U,	// BT16mi8
    139854840U,	// BT16ri8
    139854840U,	// BT16rr
    406848504U,	// BT32mi8
    139854840U,	// BT32ri8
    139854840U,	// BT32rr
    541066232U,	// BT64mi8
    139854840U,	// BT64ri8
    139854840U,	// BT64rr
    402654204U,	// CALL32m
    134218748U,	// CALL32r
    536871932U,	// CALL64m
    1073742844U,	// CALL64pcrel32
    134218748U,	// CALL64r
    1073742844U,	// CALLpcrel32
    1026U,	// CBW
    1030U,	// CDQ
    1034U,	// CDQE
    1039U,	// CHS_F
    0U,	// CHS_Fp32
    0U,	// CHS_Fp64
    0U,	// CHS_Fp80
    671089684U,	// CLFLUSH
    138675229U,	// CMOVA16rm
    138544157U,	// CMOVA16rr
    138806301U,	// CMOVA32rm
    138544157U,	// CMOVA32rr
    138937373U,	// CMOVA64rm
    138544157U,	// CMOVA64rr
    138675236U,	// CMOVAE16rm
    138544164U,	// CMOVAE16rr
    138806308U,	// CMOVAE32rm
    138544164U,	// CMOVAE32rr
    138937380U,	// CMOVAE64rm
    138544164U,	// CMOVAE64rr
    138675244U,	// CMOVB16rm
    138544172U,	// CMOVB16rr
    138806316U,	// CMOVB32rm
    138544172U,	// CMOVB32rr
    138937388U,	// CMOVB64rm
    138544172U,	// CMOVB64rr
    138675251U,	// CMOVBE16rm
    138544179U,	// CMOVBE16rr
    138806323U,	// CMOVBE32rm
    138544179U,	// CMOVBE32rr
    138937395U,	// CMOVBE64rm
    138544179U,	// CMOVBE64rr
    134218811U,	// CMOVBE_F
    0U,	// CMOVBE_Fp32
    0U,	// CMOVBE_Fp64
    0U,	// CMOVBE_Fp80
    134218828U,	// CMOVB_F
    0U,	// CMOVB_Fp32
    0U,	// CMOVB_Fp64
    0U,	// CMOVB_Fp80
    138675292U,	// CMOVE16rm
    138544220U,	// CMOVE16rr
    138806364U,	// CMOVE32rm
    138544220U,	// CMOVE32rr
    138937436U,	// CMOVE64rm
    138544220U,	// CMOVE64rr
    134218851U,	// CMOVE_F
    0U,	// CMOVE_Fp32
    0U,	// CMOVE_Fp64
    0U,	// CMOVE_Fp80
    138675315U,	// CMOVG16rm
    138544243U,	// CMOVG16rr
    138806387U,	// CMOVG32rm
    138544243U,	// CMOVG32rr
    138937459U,	// CMOVG64rm
    138544243U,	// CMOVG64rr
    138675322U,	// CMOVGE16rm
    138544250U,	// CMOVGE16rr
    138806394U,	// CMOVGE32rm
    138544250U,	// CMOVGE32rr
    138937466U,	// CMOVGE64rm
    138544250U,	// CMOVGE64rr
    138675330U,	// CMOVL16rm
    138544258U,	// CMOVL16rr
    138806402U,	// CMOVL32rm
    138544258U,	// CMOVL32rr
    138937474U,	// CMOVL64rm
    138544258U,	// CMOVL64rr
    138675337U,	// CMOVLE16rm
    138544265U,	// CMOVLE16rr
    138806409U,	// CMOVLE32rm
    138544265U,	// CMOVLE32rr
    138937481U,	// CMOVLE64rm
    138544265U,	// CMOVLE64rr
    134218897U,	// CMOVNBE_F
    0U,	// CMOVNBE_Fp32
    0U,	// CMOVNBE_Fp64
    0U,	// CMOVNBE_Fp80
    134218915U,	// CMOVNB_F
    0U,	// CMOVNB_Fp32
    0U,	// CMOVNB_Fp64
    0U,	// CMOVNB_Fp80
    138675380U,	// CMOVNE16rm
    138544308U,	// CMOVNE16rr
    138806452U,	// CMOVNE32rm
    138544308U,	// CMOVNE32rr
    138937524U,	// CMOVNE64rm
    138544308U,	// CMOVNE64rr
    134218940U,	// CMOVNE_F
    0U,	// CMOVNE_Fp32
    0U,	// CMOVNE_Fp64
    0U,	// CMOVNE_Fp80
    138675405U,	// CMOVNO16rm
    138544333U,	// CMOVNO16rr
    138806477U,	// CMOVNO32rm
    138544333U,	// CMOVNO32rr
    138937549U,	// CMOVNO64rm
    138544333U,	// CMOVNO64rr
    138675413U,	// CMOVNP16rm
    138544341U,	// CMOVNP16rr
    138806485U,	// CMOVNP32rm
    138544341U,	// CMOVNP32rr
    138937557U,	// CMOVNP64rm
    138544341U,	// CMOVNP64rr
    134218973U,	// CMOVNP_F
    0U,	// CMOVNP_Fp32
    0U,	// CMOVNP_Fp64
    0U,	// CMOVNP_Fp80
    138675438U,	// CMOVNS16rm
    138544366U,	// CMOVNS16rr
    138806510U,	// CMOVNS32rm
    138544366U,	// CMOVNS32rr
    138937582U,	// CMOVNS64rm
    138544366U,	// CMOVNS64rr
    138675446U,	// CMOVO16rm
    138544374U,	// CMOVO16rr
    138806518U,	// CMOVO32rm
    138544374U,	// CMOVO32rr
    138937590U,	// CMOVO64rm
    138544374U,	// CMOVO64rr
    138675453U,	// CMOVP16rm
    138544381U,	// CMOVP16rr
    138806525U,	// CMOVP32rm
    138544381U,	// CMOVP32rr
    138937597U,	// CMOVP64rm
    138544381U,	// CMOVP64rr
    134219012U,	// CMOVP_F
    0U,	// CMOVP_Fp32
    0U,	// CMOVP_Fp64
    0U,	// CMOVP_Fp80
    138675477U,	// CMOVS16rm
    138544405U,	// CMOVS16rr
    138806549U,	// CMOVS32rm
    138544405U,	// CMOVS32rr
    138937621U,	// CMOVS64rm
    138544405U,	// CMOVS64rr
    1308U,	// CMOV_FR32
    1327U,	// CMOV_FR64
    1346U,	// CMOV_GR8
    1364U,	// CMOV_V1I64
    1384U,	// CMOV_V2F64
    1404U,	// CMOV_V2I64
    1424U,	// CMOV_V4F32
    134219172U,	// CMP16i16
    272631214U,	// CMP16mi
    272631214U,	// CMP16mi8
    272631214U,	// CMP16mr
    139855278U,	// CMP16mrmrr
    139855278U,	// CMP16ri
    139855278U,	// CMP16ri8
    139724206U,	// CMP16rm
    139855278U,	// CMP16rr
    134219187U,	// CMP32i32
    406848942U,	// CMP32mi
    406848942U,	// CMP32mi8
    406848942U,	// CMP32mr
    139855278U,	// CMP32mrmrr
    139855278U,	// CMP32ri
    139855278U,	// CMP32ri8
    139986350U,	// CMP32rm
    139855278U,	// CMP32rr
    134219198U,	// CMP64i32
    541066670U,	// CMP64mi32
    541066670U,	// CMP64mi8
    541066670U,	// CMP64mr
    139855278U,	// CMP64mrmrr
    139855278U,	// CMP64ri32
    139855278U,	// CMP64ri8
    140117422U,	// CMP64rm
    139855278U,	// CMP64rr
    134219209U,	// CMP8i8
    675284398U,	// CMP8mi
    675284398U,	// CMP8mr
    139855278U,	// CMP8mrmrr
    139855278U,	// CMP8ri
    140248494U,	// CMP8rm
    139855278U,	// CMP8rr
    1221330387U,	// CMPPDrmi
    1354892755U,	// CMPPDrri
    1225524691U,	// CMPPSrmi
    1359087059U,	// CMPPSrri
    1495U,	// CMPS16
    1495U,	// CMPS32
    1495U,	// CMPS64
    1495U,	// CMPS8
    1229850067U,	// CMPSDrm
    1363281363U,	// CMPSDrr
    1234175443U,	// CMPSSrm
    1367475667U,	// CMPSSrr
    140379612U,	// COMISDrm
    139855324U,	// COMISDrr
    1508U,	// COS_F
    0U,	// COS_Fp32
    0U,	// COS_Fp64
    0U,	// COS_Fp80
    1513U,	// CQO
    1505756653U,	// CRC32m16
    1509950957U,	// CRC32m32
    1514145261U,	// CRC32m8
    1518339565U,	// CRC32r16
    1518339565U,	// CRC32r32
    1518339565U,	// CRC32r8
    1522533869U,	// CRC64m64
    1518339565U,	// CRC64r64
    140379637U,	// CVTDQ2PDrm
    139855349U,	// CVTDQ2PDrr
    140379647U,	// CVTDQ2PSrm
    139855359U,	// CVTDQ2PSrr
    140379657U,	// CVTPD2DQrm
    139855369U,	// CVTPD2DQrr
    140379667U,	// CVTPS2DQrm
    139855379U,	// CVTPS2DQrr
    140510749U,	// CVTSD2SSrm
    139855389U,	// CVTSD2SSrr
    140117543U,	// CVTSI2SD64rm
    139855399U,	// CVTSI2SD64rr
    139986471U,	// CVTSI2SDrm
    139855399U,	// CVTSI2SDrr
    140117553U,	// CVTSI2SS64rm
    139855409U,	// CVTSI2SS64rr
    139986481U,	// CVTSI2SSrm
    139855409U,	// CVTSI2SSrr
    140641851U,	// CVTSS2SDrm
    139855419U,	// CVTSS2SDrr
    140510789U,	// CVTTSD2SI64rm
    139855429U,	// CVTTSD2SI64rr
    140510789U,	// CVTTSD2SIrm
    139855429U,	// CVTTSD2SIrr
    140641872U,	// CVTTSS2SI64rm
    139855440U,	// CVTTSS2SI64rr
    140641872U,	// CVTTSS2SIrm
    139855440U,	// CVTTSS2SIrr
    1627U,	// CWD
    1631U,	// CWDE
    268437092U,	// DEC16m
    134219364U,	// DEC16r
    402654820U,	// DEC32m
    134219364U,	// DEC32r
    268437092U,	// DEC64_16m
    134219364U,	// DEC64_16r
    402654820U,	// DEC64_32m
    134219364U,	// DEC64_32r
    536872548U,	// DEC64m
    134219364U,	// DEC64r
    671090276U,	// DEC8m
    134219364U,	// DEC8r
    268437097U,	// DIV16m
    134219369U,	// DIV16r
    402654825U,	// DIV32m
    134219369U,	// DIV32r
    536872553U,	// DIV64m
    134219369U,	// DIV64r
    671090281U,	// DIV8m
    134219369U,	// DIV8r
    139200110U,	// DIVPDrm
    138544750U,	// DIVPDrr
    139200117U,	// DIVPSrm
    138544757U,	// DIVPSrr
    805308028U,	// DIVR_F32m
    939525756U,	// DIVR_F64m
    268437123U,	// DIVR_FI16m
    402654851U,	// DIVR_FI32m
    134219403U,	// DIVR_FPrST0
    134219388U,	// DIVR_FST0r
    0U,	// DIVR_Fp32m
    0U,	// DIVR_Fp64m
    0U,	// DIVR_Fp64m32
    0U,	// DIVR_Fp80m32
    0U,	// DIVR_Fp80m64
    0U,	// DIVR_FpI16m32
    0U,	// DIVR_FpI16m64
    0U,	// DIVR_FpI16m80
    0U,	// DIVR_FpI32m32
    0U,	// DIVR_FpI32m64
    0U,	// DIVR_FpI32m80
    142607996U,	// DIVR_FrST0
    139331219U,	// DIVSDrm
    139331219U,	// DIVSDrm_Int
    138544787U,	// DIVSDrr
    138544787U,	// DIVSDrr_Int
    139462298U,	// DIVSSrm
    139462298U,	// DIVSSrm_Int
    138544794U,	// DIVSSrr
    138544794U,	// DIVSSrr_Int
    805308065U,	// DIV_F32m
    939525793U,	// DIV_F64m
    268437159U,	// DIV_FI16m
    402654887U,	// DIV_FI32m
    134219438U,	// DIV_FPrST0
    134219425U,	// DIV_FST0r
    0U,	// DIV_Fp32
    0U,	// DIV_Fp32m
    0U,	// DIV_Fp64
    0U,	// DIV_Fp64m
    0U,	// DIV_Fp64m32
    0U,	// DIV_Fp80
    0U,	// DIV_Fp80m32
    0U,	// DIV_Fp80m64
    0U,	// DIV_FpI16m32
    0U,	// DIV_FpI16m64
    0U,	// DIV_FpI16m80
    0U,	// DIV_FpI32m32
    0U,	// DIV_FpI32m64
    0U,	// DIV_FpI32m80
    142608033U,	// DIV_FrST0
    139609781U,	// DPPDrmi
    138561205U,	// DPPDrri
    139609787U,	// DPPSrmi
    138561211U,	// DPPSrri
    134219457U,	// EH_RETURN
    134219457U,	// EH_RETURN64
    139855576U,	// ENTER
    809518815U,	// EXTRACTPSmr
    139871967U,	// EXTRACTPSrr
    139855594U,	// FARCALL16i
    1610614506U,	// FARCALL16m
    139855594U,	// FARCALL32i
    1610614506U,	// FARCALL32m
    1610614506U,	// FARCALL64
    139855601U,	// FARJMP16i
    1610614513U,	// FARJMP16m
    139855601U,	// FARJMP32i
    1610614513U,	// FARJMP32m
    1610614513U,	// FARJMP64
    805308151U,	// FBLDm
    805308157U,	// FBSTPm
    805308164U,	// FCOM32m
    939525892U,	// FCOM64m
    805308170U,	// FCOMP32m
    939525898U,	// FCOMP64m
    268437265U,	// FICOM16m
    402654993U,	// FICOM32m
    268437272U,	// FICOMP16m
    402655000U,	// FICOMP32m
    402655008U,	// FISTTP32m
    268437288U,	// FLDCW16m
    805308207U,	// FLDENVm
    268437303U,	// FNSTCW16m
    1855U,	// FNSTSW8r
    1862U,	// FP32_TO_INT16_IN_MEM
    1893U,	// FP32_TO_INT32_IN_MEM
    1924U,	// FP32_TO_INT64_IN_MEM
    1955U,	// FP64_TO_INT16_IN_MEM
    1986U,	// FP64_TO_INT32_IN_MEM
    2017U,	// FP64_TO_INT64_IN_MEM
    2048U,	// FP80_TO_INT16_IN_MEM
    2079U,	// FP80_TO_INT32_IN_MEM
    2110U,	// FP80_TO_INT64_IN_MEM
    2141U,	// FP_REG_KILL
    805308523U,	// FRSTORm
    805308531U,	// FSAVEm
    805308538U,	// FSTENVm
    805308546U,	// FSTSWm
    1795164297U,	// FS_MOV32rm
    0U,	// FpGET_ST0_32
    0U,	// FpGET_ST0_64
    0U,	// FpGET_ST0_80
    0U,	// FpGET_ST1_32
    0U,	// FpGET_ST1_64
    0U,	// FpGET_ST1_80
    0U,	// FpSET_ST0_32
    0U,	// FpSET_ST0_64
    0U,	// FpSET_ST0_80
    0U,	// FpSET_ST1_32
    0U,	// FpSET_ST1_64
    0U,	// FpSET_ST1_80
    139198713U,	// FsANDNPDrm
    138543353U,	// FsANDNPDrr
    139198721U,	// FsANDNPSrm
    138543361U,	// FsANDNPSrr
    139198729U,	// FsANDPDrm
    138543369U,	// FsANDPDrr
    139198736U,	// FsANDPSrm
    138543376U,	// FsANDPSrr
    140773523U,	// FsFLD0SD
    140773523U,	// FsFLD0SS
    140380313U,	// FsMOVAPDrm
    139856025U,	// FsMOVAPDrr
    140380321U,	// FsMOVAPSrm
    139856033U,	// FsMOVAPSrr
    139200681U,	// FsORPDrm
    138545321U,	// FsORPDrr
    139200687U,	// FsORPSrm
    138545327U,	// FsORPSrr
    139200693U,	// FsXORPDrm
    138545333U,	// FsXORPDrr
    139200700U,	// FsXORPSrm
    138545340U,	// FsXORPSrr
    1795164355U,	// GS_MOV32rm
    139200717U,	// HADDPDrm
    138545357U,	// HADDPDrr
    139200725U,	// HADDPSrm
    138545365U,	// HADDPSrr
    139200733U,	// HSUBPDrm
    138545373U,	// HSUBPDrr
    139200741U,	// HSUBPSrm
    138545381U,	// HSUBPSrr
    268437741U,	// IDIV16m
    134220013U,	// IDIV16r
    402655469U,	// IDIV32m
    134220013U,	// IDIV32r
    536873197U,	// IDIV64m
    134220013U,	// IDIV64r
    671090925U,	// IDIV8m
    134220013U,	// IDIV8r
    268437747U,	// ILD_F16m
    402655475U,	// ILD_F32m
    536873203U,	// ILD_F64m
    0U,	// ILD_Fp16m32
    0U,	// ILD_Fp16m64
    0U,	// ILD_Fp16m80
    0U,	// ILD_Fp32m32
    0U,	// ILD_Fp32m64
    0U,	// ILD_Fp32m80
    0U,	// ILD_Fp64m32
    0U,	// ILD_Fp64m64
    0U,	// ILD_Fp64m80
    268437753U,	// IMUL16m
    134220025U,	// IMUL16r
    138676473U,	// IMUL16rm
    139741433U,	// IMUL16rmi
    139741433U,	// IMUL16rmi8
    138545401U,	// IMUL16rr
    139872505U,	// IMUL16rri
    139872505U,	// IMUL16rri8
    402655481U,	// IMUL32m
    134220025U,	// IMUL32r
    138807545U,	// IMUL32rm
    140003577U,	// IMUL32rmi
    140003577U,	// IMUL32rmi8
    138545401U,	// IMUL32rr
    139872505U,	// IMUL32rri
    139872505U,	// IMUL32rri8
    536873209U,	// IMUL64m
    134220025U,	// IMUL64r
    138938617U,	// IMUL64rm
    140134649U,	// IMUL64rmi32
    140134649U,	// IMUL64rmi8
    138545401U,	// IMUL64rr
    139872505U,	// IMUL64rri32
    139872505U,	// IMUL64rri8
    671090937U,	// IMUL8m
    134220025U,	// IMUL8r
    134220031U,	// IN16ri
    2312U,	// IN16rr
    134220052U,	// IN32ri
    2334U,	// IN32rr
    134220075U,	// IN8ri
    2356U,	// IN8rr
    268437824U,	// INC16m
    134220096U,	// INC16r
    402655552U,	// INC32m
    134220096U,	// INC32r
    268437824U,	// INC64_16m
    134220096U,	// INC64_16r
    402655552U,	// INC64_32m
    134220096U,	// INC64_32r
    536873280U,	// INC64m
    134220096U,	// INC64r
    671091008U,	// INC8m
    134220096U,	// INC8r
    139479365U,	// INSERTPSrm
    138561861U,	// INSERTPSrr
    134220111U,	// INT
    2388U,	// INT3
    268437280U,	// ISTT_FP16m
    402655008U,	// ISTT_FP32m
    536872736U,	// ISTT_FP64m
    0U,	// ISTT_Fp16m32
    0U,	// ISTT_Fp16m64
    0U,	// ISTT_Fp16m80
    0U,	// ISTT_Fp32m32
    0U,	// ISTT_Fp32m64
    0U,	// ISTT_Fp32m80
    0U,	// ISTT_Fp64m32
    0U,	// ISTT_Fp64m64
    0U,	// ISTT_Fp64m80
    268437850U,	// IST_F16m
    402655578U,	// IST_F32m
    268437856U,	// IST_FP16m
    402655584U,	// IST_FP32m
    536873312U,	// IST_FP64m
    0U,	// IST_Fp16m32
    0U,	// IST_Fp16m64
    0U,	// IST_Fp16m80
    0U,	// IST_Fp32m32
    0U,	// IST_Fp32m64
    0U,	// IST_Fp32m80
    0U,	// IST_Fp64m32
    0U,	// IST_Fp64m64
    0U,	// IST_Fp64m80
    1229850067U,	// Int_CMPSDrm
    1363281363U,	// Int_CMPSDrr
    1234175443U,	// Int_CMPSSrm
    1367475667U,	// Int_CMPSSrr
    140379612U,	// Int_COMISDrm
    139855324U,	// Int_COMISDrr
    140380519U,	// Int_COMISSrm
    139856231U,	// Int_COMISSrr
    140117493U,	// Int_CVTDQ2PDrm
    139855349U,	// Int_CVTDQ2PDrr
    140903935U,	// Int_CVTDQ2PSrm
    139855359U,	// Int_CVTDQ2PSrr
    140379657U,	// Int_CVTPD2DQrm
    139855369U,	// Int_CVTPD2DQrr
    140380527U,	// Int_CVTPD2PIrm
    139856239U,	// Int_CVTPD2PIrr
    140380537U,	// Int_CVTPD2PSrm
    139856249U,	// Int_CVTPD2PSrr
    140118403U,	// Int_CVTPI2PDrm
    139856259U,	// Int_CVTPI2PDrr
    138938765U,	// Int_CVTPI2PSrm
    138545549U,	// Int_CVTPI2PSrr
    140379667U,	// Int_CVTPS2DQrm
    139855379U,	// Int_CVTPS2DQrr
    140511639U,	// Int_CVTPS2PDrm
    139856279U,	// Int_CVTPS2PDrr
    140511649U,	// Int_CVTPS2PIrm
    139856289U,	// Int_CVTPS2PIrr
    140380587U,	// Int_CVTSD2SI64rm
    139856299U,	// Int_CVTSD2SI64rr
    140380587U,	// Int_CVTSD2SIrm
    139856299U,	// Int_CVTSD2SIrr
    139331101U,	// Int_CVTSD2SSrm
    138544669U,	// Int_CVTSD2SSrr
    138937895U,	// Int_CVTSI2SD64rm
    138544679U,	// Int_CVTSI2SD64rr
    138806823U,	// Int_CVTSI2SDrm
    138544679U,	// Int_CVTSI2SDrr
    138937905U,	// Int_CVTSI2SS64rm
    138544689U,	// Int_CVTSI2SS64rr
    138806833U,	// Int_CVTSI2SSrm
    138544689U,	// Int_CVTSI2SSrr
    139462203U,	// Int_CVTSS2SDrm
    138544699U,	// Int_CVTSS2SDrr
    140642741U,	// Int_CVTSS2SI64rm
    139856309U,	// Int_CVTSS2SI64rr
    140642741U,	// Int_CVTSS2SIrm
    139856309U,	// Int_CVTSS2SIrr
    140380607U,	// Int_CVTTPD2DQrm
    139856319U,	// Int_CVTTPD2DQrr
    140380618U,	// Int_CVTTPD2PIrm
    139856330U,	// Int_CVTTPD2PIrr
    140380629U,	// Int_CVTTPS2DQrm
    139856341U,	// Int_CVTTPS2DQrr
    140511712U,	// Int_CVTTPS2PIrm
    139856352U,	// Int_CVTTPS2PIrr
    140379717U,	// Int_CVTTSD2SI64rm
    139855429U,	// Int_CVTTSD2SI64rr
    140379717U,	// Int_CVTTSD2SIrm
    139855429U,	// Int_CVTTSD2SIrr
    140641872U,	// Int_CVTTSS2SI64rm
    139855440U,	// Int_CVTTSS2SI64rr
    140641872U,	// Int_CVTTSS2SIrm
    139855440U,	// Int_CVTTSS2SIrr
    140380651U,	// Int_UCOMISDrm
    139856363U,	// Int_UCOMISDrr
    140380660U,	// Int_UCOMISSrm
    139856372U,	// Int_UCOMISSrr
    1073744381U,	// JA
    1073744381U,	// JA8
    1073744385U,	// JAE
    1073744385U,	// JAE8
    1073744390U,	// JB
    1073744390U,	// JB8
    1073744394U,	// JBE
    1073744394U,	// JBE8
    1073744399U,	// JCXZ8
    1073744405U,	// JE
    1073744405U,	// JE8
    1073744409U,	// JG
    1073744409U,	// JG8
    1073744413U,	// JGE
    1073744413U,	// JGE8
    1073744418U,	// JL
    1073744418U,	// JL8
    1073744422U,	// JLE
    1073744422U,	// JLE8
    1073744427U,	// JMP
    402655787U,	// JMP32m
    134220331U,	// JMP32r
    536873515U,	// JMP64m
    134220331U,	// JMP64r
    1073744427U,	// JMP8
    1073744432U,	// JNE
    1073744432U,	// JNE8
    1073744437U,	// JNO
    1073744437U,	// JNO8
    1073744442U,	// JNP
    1073744442U,	// JNP8
    1073744447U,	// JNS
    1073744447U,	// JNS8
    1073744452U,	// JO
    1073744452U,	// JO8
    1073744456U,	// JP
    1073744456U,	// JP8
    1073744460U,	// JS
    1073744460U,	// JS8
    2640U,	// LAHF
    139725397U,	// LAR16rm
    139856469U,	// LAR16rr
    139725397U,	// LAR32rm
    139856469U,	// LAR32rr
    139725397U,	// LAR64rm
    139856469U,	// LAR64rr
    272632410U,	// LCMPXCHG16
    406850138U,	// LCMPXCHG32
    1879050857U,	// LCMPXCHG64
    675285594U,	// LCMPXCHG8
    402655865U,	// LCMPXCHG8B
    140905098U,	// LDDQUrm
    402655889U,	// LDMXCSR
    2714U,	// LD_F0
    2719U,	// LD_F1
    805309092U,	// LD_F32m
    939526820U,	// LD_F64m
    2013268644U,	// LD_F80m
    0U,	// LD_Fp032
    0U,	// LD_Fp064
    0U,	// LD_Fp080
    0U,	// LD_Fp132
    0U,	// LD_Fp164
    0U,	// LD_Fp180
    0U,	// LD_Fp32m
    0U,	// LD_Fp32m64
    0U,	// LD_Fp32m80
    0U,	// LD_Fp64m
    0U,	// LD_Fp64m80
    0U,	// LD_Fp80m
    134220452U,	// LD_Frr
    141036201U,	// LEA16r
    141036201U,	// LEA32r
    141167273U,	// LEA64_32r
    141298345U,	// LEA64r
    2734U,	// LEAVE
    2734U,	// LEAVE64
    2740U,	// LFENCE
    272632507U,	// LOCK_ADD16mi
    272632507U,	// LOCK_ADD16mi8
    272632507U,	// LOCK_ADD16mr
    406850235U,	// LOCK_ADD32mi
    406850235U,	// LOCK_ADD32mi8
    406850235U,	// LOCK_ADD32mr
    541067963U,	// LOCK_ADD64mi32
    541067963U,	// LOCK_ADD64mi8
    541067963U,	// LOCK_ADD64mr
    675285691U,	// LOCK_ADD8mi
    675285691U,	// LOCK_ADD8mr
    268438214U,	// LOCK_DEC16m
    402655942U,	// LOCK_DEC32m
    536873670U,	// LOCK_DEC64m
    671091398U,	// LOCK_DEC8m
    268438225U,	// LOCK_INC16m
    402655953U,	// LOCK_INC32m
    536873681U,	// LOCK_INC64m
    671091409U,	// LOCK_INC8m
    272632540U,	// LOCK_SUB16mi
    272632540U,	// LOCK_SUB16mi8
    272632540U,	// LOCK_SUB16mr
    406850268U,	// LOCK_SUB32mi
    406850268U,	// LOCK_SUB32mi8
    406850268U,	// LOCK_SUB32mr
    541067996U,	// LOCK_SUB64mi32
    541067996U,	// LOCK_SUB64mi8
    541067996U,	// LOCK_SUB64mr
    675285724U,	// LOCK_SUB8mi
    675285724U,	// LOCK_SUB8mr
    2791U,	// LODSB
    2797U,	// LODSD
    2803U,	// LODSQ
    2809U,	// LODSW
    1073744639U,	// LOOP
    1073744645U,	// LOOPE
    1073744652U,	// LOOPNE
    2836U,	// LRET
    134220569U,	// LRETI
    2147486495U,	// LXADD16
    1799359263U,	// LXADD32
    2281704223U,	// LXADD64
    2415921951U,	// LXADD8
    139856683U,	// MASKMOVDQU
    139856683U,	// MASKMOVDQU64
    139201335U,	// MAXPDrm
    139201335U,	// MAXPDrm_Int
    138545975U,	// MAXPDrr
    138545975U,	// MAXPDrr_Int
    139201342U,	// MAXPSrm
    139201342U,	// MAXPSrm_Int
    138545982U,	// MAXPSrr
    138545982U,	// MAXPSrr_Int
    139332421U,	// MAXSDrm
    139332421U,	// MAXSDrm_Int
    138545989U,	// MAXSDrr
    138545989U,	// MAXSDrr_Int
    139463500U,	// MAXSSrm
    139463500U,	// MAXSSrm_Int
    138545996U,	// MAXSSrr
    138545996U,	// MAXSSrr_Int
    2899U,	// MFENCE
    139201370U,	// MINPDrm
    139201370U,	// MINPDrm_Int
    138546010U,	// MINPDrr
    138546010U,	// MINPDrr_Int
    139201377U,	// MINPSrm
    139201377U,	// MINPSrm_Int
    138546017U,	// MINPSrr
    138546017U,	// MINPSrr_Int
    139332456U,	// MINSDrm
    139332456U,	// MINSDrm_Int
    138546024U,	// MINSDrr
    138546024U,	// MINSDrr_Int
    139463535U,	// MINSSrm
    139463535U,	// MINSSrm_Int
    138546031U,	// MINSSrr
    138546031U,	// MINSSrr_Int
    140380527U,	// MMX_CVTPD2PIrm
    139856239U,	// MMX_CVTPD2PIrr
    140118403U,	// MMX_CVTPI2PDrm
    139856259U,	// MMX_CVTPI2PDrr
    140118413U,	// MMX_CVTPI2PSrm
    139856269U,	// MMX_CVTPI2PSrr
    140511649U,	// MMX_CVTPS2PIrm
    139856289U,	// MMX_CVTPS2PIrr
    140380618U,	// MMX_CVTTPD2PIrm
    139856330U,	// MMX_CVTTPD2PIrr
    140511712U,	// MMX_CVTTPS2PIrm
    139856352U,	// MMX_CVTTPS2PIrr
    2934U,	// MMX_EMMS
    2939U,	// MMX_FEMMS
    139856769U,	// MMX_MASKMOVQ
    139856769U,	// MMX_MASKMOVQ64
    139856779U,	// MMX_MOVD64from64rr
    406850443U,	// MMX_MOVD64mr
    139987851U,	// MMX_MOVD64rm
    139856779U,	// MMX_MOVD64rr
    139856779U,	// MMX_MOVD64rrv164
    139856779U,	// MMX_MOVD64to64rr
    139856785U,	// MMX_MOVDQ2Qrr
    541068186U,	// MMX_MOVNTQmr
    139856802U,	// MMX_MOVQ2DQrr
    139856802U,	// MMX_MOVQ2FR64rr
    541068203U,	// MMX_MOVQ64mr
    140118955U,	// MMX_MOVQ64rm
    139856811U,	// MMX_MOVQ64rr
    139987851U,	// MMX_MOVZDI2PDIrm
    139856779U,	// MMX_MOVZDI2PDIrr
    138939313U,	// MMX_PACKSSDWrm
    138546097U,	// MMX_PACKSSDWrr
    138939323U,	// MMX_PACKSSWBrm
    138546107U,	// MMX_PACKSSWBrr
    138939333U,	// MMX_PACKUSWBrm
    138546117U,	// MMX_PACKUSWBrr
    138939343U,	// MMX_PADDBrm
    138546127U,	// MMX_PADDBrr
    138939350U,	// MMX_PADDDrm
    138546134U,	// MMX_PADDDrr
    138939357U,	// MMX_PADDQrm
    138546141U,	// MMX_PADDQrr
    138939364U,	// MMX_PADDSBrm
    138546148U,	// MMX_PADDSBrr
    138939372U,	// MMX_PADDSWrm
    138546156U,	// MMX_PADDSWrr
    138939380U,	// MMX_PADDUSBrm
    138546164U,	// MMX_PADDUSBrr
    138939389U,	// MMX_PADDUSWrm
    138546173U,	// MMX_PADDUSWrr
    138939398U,	// MMX_PADDWrm
    138546182U,	// MMX_PADDWrr
    138939405U,	// MMX_PANDNrm
    138546189U,	// MMX_PANDNrr
    138939412U,	// MMX_PANDrm
    138546196U,	// MMX_PANDrr
    138939418U,	// MMX_PAVGBrm
    138546202U,	// MMX_PAVGBrr
    138939425U,	// MMX_PAVGWrm
    138546209U,	// MMX_PAVGWrr
    138939432U,	// MMX_PCMPEQBrm
    138546216U,	// MMX_PCMPEQBrr
    138939441U,	// MMX_PCMPEQDrm
    138546225U,	// MMX_PCMPEQDrr
    138939450U,	// MMX_PCMPEQWrm
    138546234U,	// MMX_PCMPEQWrr
    138939459U,	// MMX_PCMPGTBrm
    138546243U,	// MMX_PCMPGTBrr
    138939468U,	// MMX_PCMPGTDrm
    138546252U,	// MMX_PCMPGTDrr
    138939477U,	// MMX_PCMPGTWrm
    138546261U,	// MMX_PCMPGTWrr
    139873374U,	// MMX_PEXTRWri
    138693734U,	// MMX_PINSRWrmi
    138562662U,	// MMX_PINSRWrri
    138939502U,	// MMX_PMADDWDrm
    138546286U,	// MMX_PMADDWDrr
    138939511U,	// MMX_PMAXSWrm
    138546295U,	// MMX_PMAXSWrr
    138939519U,	// MMX_PMAXUBrm
    138546303U,	// MMX_PMAXUBrr
    138939527U,	// MMX_PMINSWrm
    138546311U,	// MMX_PMINSWrr
    138939535U,	// MMX_PMINUBrm
    138546319U,	// MMX_PMINUBrr
    139857047U,	// MMX_PMOVMSKBrr
    138939553U,	// MMX_PMULHUWrm
    138546337U,	// MMX_PMULHUWrr
    138939562U,	// MMX_PMULHWrm
    138546346U,	// MMX_PMULHWrr
    138939570U,	// MMX_PMULLWrm
    138546354U,	// MMX_PMULLWrr
    138939578U,	// MMX_PMULUDQrm
    138546362U,	// MMX_PMULUDQrr
    138939587U,	// MMX_PORrm
    138546371U,	// MMX_PORrr
    138939592U,	// MMX_PSADBWrm
    138546376U,	// MMX_PSADBWrr
    140135632U,	// MMX_PSHUFWmi
    139873488U,	// MMX_PSHUFWri
    138546392U,	// MMX_PSLLDri
    138939608U,	// MMX_PSLLDrm
    138546392U,	// MMX_PSLLDrr
    138546399U,	// MMX_PSLLQri
    138939615U,	// MMX_PSLLQrm
    138546399U,	// MMX_PSLLQrr
    138546406U,	// MMX_PSLLWri
    138939622U,	// MMX_PSLLWrm
    138546406U,	// MMX_PSLLWrr
    138546413U,	// MMX_PSRADri
    138939629U,	// MMX_PSRADrm
    138546413U,	// MMX_PSRADrr
    138546420U,	// MMX_PSRAWri
    138939636U,	// MMX_PSRAWrm
    138546420U,	// MMX_PSRAWrr
    138546427U,	// MMX_PSRLDri
    138939643U,	// MMX_PSRLDrm
    138546427U,	// MMX_PSRLDrr
    138546434U,	// MMX_PSRLQri
    138939650U,	// MMX_PSRLQrm
    138546434U,	// MMX_PSRLQrr
    138546441U,	// MMX_PSRLWri
    138939657U,	// MMX_PSRLWrm
    138546441U,	// MMX_PSRLWrr
    138939664U,	// MMX_PSUBBrm
    138546448U,	// MMX_PSUBBrr
    138939671U,	// MMX_PSUBDrm
    138546455U,	// MMX_PSUBDrr
    138939678U,	// MMX_PSUBQrm
    138546462U,	// MMX_PSUBQrr
    138939685U,	// MMX_PSUBSBrm
    138546469U,	// MMX_PSUBSBrr
    138939693U,	// MMX_PSUBSWrm
    138546477U,	// MMX_PSUBSWrr
    138939701U,	// MMX_PSUBUSBrm
    138546485U,	// MMX_PSUBUSBrr
    138939710U,	// MMX_PSUBUSWrm
    138546494U,	// MMX_PSUBUSWrr
    138939719U,	// MMX_PSUBWrm
    138546503U,	// MMX_PSUBWrr
    138939726U,	// MMX_PUNPCKHBWrm
    138546510U,	// MMX_PUNPCKHBWrr
    138939737U,	// MMX_PUNPCKHDQrm
    138546521U,	// MMX_PUNPCKHDQrr
    138939748U,	// MMX_PUNPCKHWDrm
    138546532U,	// MMX_PUNPCKHWDrr
    138939759U,	// MMX_PUNPCKLBWrm
    138546543U,	// MMX_PUNPCKLBWrr
    138939770U,	// MMX_PUNPCKLDQrm
    138546554U,	// MMX_PUNPCKLDQrr
    138939781U,	// MMX_PUNPCKLWDrm
    138546565U,	// MMX_PUNPCKLWDrr
    138938515U,	// MMX_PXORrm
    138545299U,	// MMX_PXORrr
    140773523U,	// MMX_V_SET0
    140774449U,	// MMX_V_SETALLONES
    3472U,	// MONITOR
    192941464U,	// MOV16ao16
    272633240U,	// MOV16mi
    272633240U,	// MOV16mr
    272633240U,	// MOV16ms
    134221213U,	// MOV16o16a
    0U,	// MOV16r0
    139857304U,	// MOV16ri
    139726232U,	// MOV16rm
    139857304U,	// MOV16rr
    139857304U,	// MOV16rs
    139726232U,	// MOV16sm
    139857304U,	// MOV16sr
    197135768U,	// MOV32ao32
    406850968U,	// MOV32mi
    406850968U,	// MOV32mr
    134221223U,	// MOV32o32a
    140774834U,	// MOV32r0
    139857304U,	// MOV32ri
    139988376U,	// MOV32rm
    139857304U,	// MOV32rr
    2550140343U,	// MOV64FSrm
    2550140353U,	// MOV64GSrm
    201330072U,	// MOV64ao32
    201330072U,	// MOV64ao8
    541068696U,	// MOV64mi32
    541068696U,	// MOV64mr
    541068696U,	// MOV64ms
    134221259U,	// MOV64o32a
    134221259U,	// MOV64o8a
    139857366U,	// MOV64ri
    139857304U,	// MOV64ri32
    0U,	// MOV64ri64i32
    140119448U,	// MOV64rm
    139857304U,	// MOV64rr
    139857304U,	// MOV64rs
    140119448U,	// MOV64sm
    139857304U,	// MOV64sr
    139856811U,	// MOV64toPQIrr
    140118955U,	// MOV64toSDrm
    139856811U,	// MOV64toSDrr
    205524376U,	// MOV8ao8
    675286424U,	// MOV8mi
    675286424U,	// MOV8mr
    675335576U,	// MOV8mr_NOREX
    134221278U,	// MOV8o8a
    140774834U,	// MOV8r0
    139857304U,	// MOV8ri
    140250520U,	// MOV8rm
    140299672U,	// MOV8rm_NOREX
    139857304U,	// MOV8rr
    139906456U,	// MOV8rr_NOREX
    2684356761U,	// MOVAPDmr
    140380313U,	// MOVAPDrm
    139856025U,	// MOVAPDrr
    2684356769U,	// MOVAPSmr
    140380321U,	// MOVAPSrm
    139856033U,	// MOVAPSrr
    140512744U,	// MOVDDUPrm
    139857384U,	// MOVDDUPrr
    139987851U,	// MOVDI2PDIrm
    139856779U,	// MOVDI2PDIrr
    139987851U,	// MOVDI2SSrm
    139856779U,	// MOVDI2SSrr
    2818575857U,	// MOVDQAmr
    140905969U,	// MOVDQArm
    139857393U,	// MOVDQArr
    2818575865U,	// MOVDQUmr
    2818575865U,	// MOVDQUmr_Int
    140905977U,	// MOVDQUrm
    140905977U,	// MOVDQUrm_Int
    138546689U,	// MOVHLPSrr
    943721994U,	// MOVHPDmr
    139333130U,	// MOVHPDrm
    943722002U,	// MOVHPSmr
    139333138U,	// MOVHPSrm
    138546714U,	// MOVLHPSrr
    943722019U,	// MOVLPDmr
    139333155U,	// MOVLPDrm
    138546731U,	// MOVLPDrr
    943722034U,	// MOVLPSmr
    139333170U,	// MOVLPSrm
    138546746U,	// MOVLPSrr
    541068203U,	// MOVLQ128mr
    138546731U,	// MOVLSD2PDrr
    138546746U,	// MOVLSS2PSrr
    139857473U,	// MOVMSKPDrr
    139857483U,	// MOVMSKPSrr
    140906069U,	// MOVNTDQArm
    2684358239U,	// MOVNTDQmr
    406851176U,	// MOVNTImr
    2818575984U,	// MOVNTPDmr
    2818575993U,	// MOVNTPSmr
    0U,	// MOVPC32r
    943722027U,	// MOVPD2SDmr
    139857451U,	// MOVPD2SDrr
    406850443U,	// MOVPDI2DImr
    139856779U,	// MOVPDI2DIrr
    541068203U,	// MOVPQI2QImr
    139856811U,	// MOVPQIto64rr
    809504314U,	// MOVPS2SSmr
    139857466U,	// MOVPS2SSrr
    140118955U,	// MOVQI2PQIrm
    140512811U,	// MOVSD2PDrm
    139857451U,	// MOVSD2PDrr
    943722027U,	// MOVSDmr
    140512811U,	// MOVSDrm
    139857451U,	// MOVSDrr
    541068203U,	// MOVSDto64mr
    139856811U,	// MOVSDto64rr
    140381826U,	// MOVSHDUPrm
    139857538U,	// MOVSHDUPrr
    140381836U,	// MOVSLDUPrm
    139857548U,	// MOVSLDUPrr
    406850443U,	// MOVSS2DImr
    139856779U,	// MOVSS2DIrr
    140643898U,	// MOVSS2PSrm
    139857466U,	// MOVSS2PSrr
    809504314U,	// MOVSSmr
    140643898U,	// MOVSSrm
    139857466U,	// MOVSSrr
    0U,	// MOVSX16rm8
    0U,	// MOVSX16rr8
    139726486U,	// MOVSX32rm16
    140250774U,	// MOVSX32rm8
    139857558U,	// MOVSX32rr16
    139857558U,	// MOVSX32rr8
    139726486U,	// MOVSX64rm16
    139988637U,	// MOVSX64rm32
    140250774U,	// MOVSX64rm8
    139857558U,	// MOVSX64rr16
    139857565U,	// MOVSX64rr32
    139857558U,	// MOVSX64rr8
    2684358309U,	// MOVUPDmr
    2684358309U,	// MOVUPDmr_Int
    140381861U,	// MOVUPDrm
    140381861U,	// MOVUPDrm_Int
    139857573U,	// MOVUPDrr
    2684358317U,	// MOVUPSmr
    2684358317U,	// MOVUPSmr_Int
    140381869U,	// MOVUPSrm
    140381869U,	// MOVUPSrm_Int
    139857581U,	// MOVUPSrr
    139987851U,	// MOVZDI2PDIrm
    139856779U,	// MOVZDI2PDIrr
    140905387U,	// MOVZPQILo2PQIrm
    139856811U,	// MOVZPQILo2PQIrr
    140118955U,	// MOVZQI2PQIrm
    139856811U,	// MOVZQI2PQIrr
    140512811U,	// MOVZSD2PDrm
    140643898U,	// MOVZSS2PSrm
    0U,	// MOVZX16rm8
    0U,	// MOVZX16rr8
    140299957U,	// MOVZX32_NOREXrm8
    139906741U,	// MOVZX32_NOREXrr8
    139726517U,	// MOVZX32rm16
    140250805U,	// MOVZX32rm8
    139857589U,	// MOVZX32rr16
    139857589U,	// MOVZX32rr8
    0U,	// MOVZX64rm16
    0U,	// MOVZX64rm32
    0U,	// MOVZX64rm8
    0U,	// MOVZX64rr16
    0U,	// MOVZX64rr32
    0U,	// MOVZX64rr8
    0U,	// MOV_Fp3232
    0U,	// MOV_Fp3264
    0U,	// MOV_Fp3280
    0U,	// MOV_Fp6432
    0U,	// MOV_Fp6464
    0U,	// MOV_Fp6480
    0U,	// MOV_Fp8032
    0U,	// MOV_Fp8064
    0U,	// MOV_Fp8080
    139611836U,	// MPSADBWrmi
    138563260U,	// MPSADBWrri
    268439237U,	// MUL16m
    134221509U,	// MUL16r
    402656965U,	// MUL32m
    134221509U,	// MUL32r
    536874693U,	// MUL64m
    134221509U,	// MUL64r
    671092421U,	// MUL8m
    134221509U,	// MUL8r
    139202250U,	// MULPDrm
    138546890U,	// MULPDrr
    139202257U,	// MULPSrm
    138546897U,	// MULPSrr
    139333336U,	// MULSDrm
    139333336U,	// MULSDrm_Int
    138546904U,	// MULSDrr
    138546904U,	// MULSDrr_Int
    139464415U,	// MULSSrm
    139464415U,	// MULSSrm_Int
    138546911U,	// MULSSrr
    138546911U,	// MULSSrr_Int
    805310182U,	// MUL_F32m
    939527910U,	// MUL_F64m
    268439276U,	// MUL_FI16m
    402657004U,	// MUL_FI32m
    134221555U,	// MUL_FPrST0
    134221542U,	// MUL_FST0r
    0U,	// MUL_Fp32
    0U,	// MUL_Fp32m
    0U,	// MUL_Fp64
    0U,	// MUL_Fp64m
    0U,	// MUL_Fp64m32
    0U,	// MUL_Fp80
    0U,	// MUL_Fp80m32
    0U,	// MUL_Fp80m64
    0U,	// MUL_FpI16m32
    0U,	// MUL_FpI16m64
    0U,	// MUL_FpI16m80
    0U,	// MUL_FpI32m32
    0U,	// MUL_FpI32m64
    0U,	// MUL_FpI32m80
    142610150U,	// MUL_FrST0
    3834U,	// MWAIT
    268439296U,	// NEG16m
    134221568U,	// NEG16r
    402657024U,	// NEG32m
    134221568U,	// NEG32r
    536874752U,	// NEG64m
    134221568U,	// NEG64r
    671092480U,	// NEG8m
    134221568U,	// NEG8r
    3845U,	// NOOP
    402657033U,	// NOOPL
    268439311U,	// NOT16m
    134221583U,	// NOT16r
    402657039U,	// NOT32m
    134221583U,	// NOT32r
    536874767U,	// NOT64m
    134221583U,	// NOT64r
    671092495U,	// NOT8m
    134221583U,	// NOT8r
    134221588U,	// OR16i16
    272633629U,	// OR16mi
    272633629U,	// OR16mi8
    272633629U,	// OR16mr
    138546973U,	// OR16ri
    138546973U,	// OR16ri8
    138678045U,	// OR16rm
    138546973U,	// OR16rr
    134221601U,	// OR32i32
    406851357U,	// OR32mi
    406851357U,	// OR32mi8
    406851357U,	// OR32mr
    138546973U,	// OR32ri
    138546973U,	// OR32ri8
    138809117U,	// OR32rm
    138546973U,	// OR32rr
    134221611U,	// OR64i32
    541069085U,	// OR64mi32
    541069085U,	// OR64mi8
    541069085U,	// OR64mr
    138546973U,	// OR64ri32
    138546973U,	// OR64ri8
    138940189U,	// OR64rm
    138546973U,	// OR64rr
    134221621U,	// OR8i8
    675286813U,	// OR8mi
    675286813U,	// OR8mr
    138546973U,	// OR8ri
    139071261U,	// OR8rm
    138546973U,	// OR8rr
    139200681U,	// ORPDrm
    138545321U,	// ORPDrr
    139200687U,	// ORPSrm
    138545327U,	// ORPSrr
    209719102U,	// OUT16ir
    3907U,	// OUT16rr
    213913406U,	// OUT32ir
    3920U,	// OUT32rr
    218107710U,	// OUT8ir
    3934U,	// OUT8rr
    140906347U,	// PABSBrm128
    140119915U,	// PABSBrm64
    139857771U,	// PABSBrr128
    139857771U,	// PABSBrr64
    140906354U,	// PABSDrm128
    140119922U,	// PABSDrm64
    139857778U,	// PABSDrr128
    139857778U,	// PABSDrr64
    140906361U,	// PABSWrm128
    140119929U,	// PABSWrm64
    139857785U,	// PABSWrr128
    139857785U,	// PABSWrr64
    139594673U,	// PACKSSDWrm
    138546097U,	// PACKSSDWrr
    139594683U,	// PACKSSWBrm
    138546107U,	// PACKSSWBrr
    139595648U,	// PACKUSDWrm
    138547072U,	// PACKUSDWrr
    139594693U,	// PACKUSWBrm
    138546117U,	// PACKUSWBrr
    139594703U,	// PADDBrm
    138546127U,	// PADDBrr
    139594710U,	// PADDDrm
    138546134U,	// PADDDrr
    139594717U,	// PADDQrm
    138546141U,	// PADDQrr
    139594724U,	// PADDSBrm
    138546148U,	// PADDSBrr
    139594732U,	// PADDSWrm
    138546156U,	// PADDSWrr
    139594740U,	// PADDUSBrm
    138546164U,	// PADDUSBrr
    139594749U,	// PADDUSWrm
    138546173U,	// PADDUSWrr
    139594758U,	// PADDWrm
    138546182U,	// PADDWrr
    139612042U,	// PALIGNR128rm
    138563466U,	// PALIGNR128rr
    138956682U,	// PALIGNR64rm
    138563466U,	// PALIGNR64rr
    139594765U,	// PANDNrm
    138546189U,	// PANDNrr
    139594772U,	// PANDrm
    138546196U,	// PANDrr
    139594778U,	// PAVGBrm
    138546202U,	// PAVGBrr
    139594785U,	// PAVGWrm
    138546209U,	// PAVGWrr
    139628435U,	// PBLENDVBrm0
    138579859U,	// PBLENDVBrr0
    139612061U,	// PBLENDWrmi
    138563485U,	// PBLENDWrri
    139594792U,	// PCMPEQBrm
    138546216U,	// PCMPEQBrr
    139594801U,	// PCMPEQDrm
    138546225U,	// PCMPEQDrr
    139595686U,	// PCMPEQQrm
    138547110U,	// PCMPEQQrr
    139594810U,	// PCMPEQWrm
    138546234U,	// PCMPEQWrr
    140922799U,	// PCMPESTRIArm
    139874223U,	// PCMPESTRIArr
    140922799U,	// PCMPESTRICrm
    139874223U,	// PCMPESTRICrr
    140922799U,	// PCMPESTRIOrm
    139874223U,	// PCMPESTRIOrr
    140922799U,	// PCMPESTRISrm
    139874223U,	// PCMPESTRISrr
    140922799U,	// PCMPESTRIZrm
    139874223U,	// PCMPESTRIZrr
    140922799U,	// PCMPESTRIrm
    139874223U,	// PCMPESTRIrr
    4026U,	// PCMPESTRM128MEM
    4050U,	// PCMPESTRM128REG
    140922858U,	// PCMPESTRM128rm
    139874282U,	// PCMPESTRM128rr
    139594819U,	// PCMPGTBrm
    138546243U,	// PCMPGTBrr
    139594828U,	// PCMPGTDrm
    138546252U,	// PCMPGTDrr
    139595765U,	// PCMPGTQrm
    138547189U,	// PCMPGTQrr
    139594837U,	// PCMPGTWrm
    138546261U,	// PCMPGTWrr
    140922878U,	// PCMPISTRIArm
    139874302U,	// PCMPISTRIArr
    140922878U,	// PCMPISTRICrm
    139874302U,	// PCMPISTRICrr
    140922878U,	// PCMPISTRIOrm
    139874302U,	// PCMPISTRIOrr
    140922878U,	// PCMPISTRISrm
    139874302U,	// PCMPISTRISrr
    140922878U,	// PCMPISTRIZrm
    139874302U,	// PCMPISTRIZrr
    140922878U,	// PCMPISTRIrm
    139874302U,	// PCMPISTRIrr
    4105U,	// PCMPISTRM128MEM
    4129U,	// PCMPISTRM128REG
    140922937U,	// PCMPISTRM128rm
    139874361U,	// PCMPISTRM128rr
    675303492U,	// PEXTRBmr
    139874372U,	// PEXTRBrr
    406868044U,	// PEXTRDmr
    139874380U,	// PEXTRDrr
    541085780U,	// PEXTRQmr
    139874388U,	// PEXTRQrr
    272649310U,	// PEXTRWmr
    139873374U,	// PEXTRWri
    139595868U,	// PHADDDrm128
    138940508U,	// PHADDDrm64
    138547292U,	// PHADDDrr128
    138547292U,	// PHADDDrr64
    139595876U,	// PHADDSWrm128
    138940516U,	// PHADDSWrm64
    138547300U,	// PHADDSWrr128
    138547300U,	// PHADDSWrr64
    139595885U,	// PHADDWrm128
    138940525U,	// PHADDWrm64
    138547309U,	// PHADDWrr128
    138547309U,	// PHADDWrr64
    140906613U,	// PHMINPOSUWrm128
    139858037U,	// PHMINPOSUWrr128
    139595905U,	// PHSUBDrm128
    138940545U,	// PHSUBDrm64
    138547329U,	// PHSUBDrr128
    138547329U,	// PHSUBDrr64
    139595913U,	// PHSUBSWrm128
    138940553U,	// PHSUBSWrm64
    138547337U,	// PHSUBSWrr128
    138547337U,	// PHSUBSWrr64
    139595922U,	// PHSUBWrm128
    138940562U,	// PHSUBWrm64
    138547346U,	// PHSUBWrr128
    138547346U,	// PHSUBWrr64
    139088026U,	// PINSRBrm
    138563738U,	// PINSRBrr
    138825890U,	// PINSRDrm
    138563746U,	// PINSRDrr
    138956970U,	// PINSRQrm
    138563754U,	// PINSRQrr
    138693734U,	// PINSRWrmi
    138562662U,	// PINSRWrri
    139595954U,	// PMADDUBSWrm128
    138940594U,	// PMADDUBSWrm64
    138547378U,	// PMADDUBSWrr128
    138547378U,	// PMADDUBSWrr64
    139594862U,	// PMADDWDrm
    138546286U,	// PMADDWDrr
    139595965U,	// PMAXSBrm
    138547389U,	// PMAXSBrr
    139595973U,	// PMAXSDrm
    138547397U,	// PMAXSDrr
    139594871U,	// PMAXSWrm
    138546295U,	// PMAXSWrr
    139594879U,	// PMAXUBrm
    138546303U,	// PMAXUBrr
    139595981U,	// PMAXUDrm
    138547405U,	// PMAXUDrr
    139595989U,	// PMAXUWrm
    138547413U,	// PMAXUWrr
    139595997U,	// PMINSBrm
    138547421U,	// PMINSBrr
    139596005U,	// PMINSDrm
    138547429U,	// PMINSDrr
    139594887U,	// PMINSWrm
    138546311U,	// PMINSWrr
    139594895U,	// PMINUBrm
    138546319U,	// PMINUBrr
    139596013U,	// PMINUDrm
    138547437U,	// PMINUDrr
    139596021U,	// PMINUWrm
    138547445U,	// PMINUWrr
    139857047U,	// PMOVMSKBrr
    139989245U,	// PMOVSXBDrm
    139858173U,	// PMOVSXBDrr
    139727111U,	// PMOVSXBQrm
    139858183U,	// PMOVSXBQrr
    140120337U,	// PMOVSXBWrm
    139858193U,	// PMOVSXBWrr
    140120347U,	// PMOVSXDQrm
    139858203U,	// PMOVSXDQrr
    140120357U,	// PMOVSXWDrm
    139858213U,	// PMOVSXWDrr
    139989295U,	// PMOVSXWQrm
    139858223U,	// PMOVSXWQrr
    139989305U,	// PMOVZXBDrm
    139858233U,	// PMOVZXBDrr
    139727171U,	// PMOVZXBQrm
    139858243U,	// PMOVZXBQrr
    140120397U,	// PMOVZXBWrm
    139858253U,	// PMOVZXBWrr
    140120407U,	// PMOVZXDQrm
    139858263U,	// PMOVZXDQrr
    140120417U,	// PMOVZXWDrm
    139858273U,	// PMOVZXWDrr
    139989355U,	// PMOVZXWQrm
    139858283U,	// PMOVZXWQrr
    139596149U,	// PMULDQrm
    138547573U,	// PMULDQrr
    139596157U,	// PMULHRSWrm128
    138940797U,	// PMULHRSWrm64
    138547581U,	// PMULHRSWrr128
    138547581U,	// PMULHRSWrr64
    139594913U,	// PMULHUWrm
    138546337U,	// PMULHUWrr
    139594922U,	// PMULHWrm
    138546346U,	// PMULHWrr
    139596167U,	// PMULLDrm
    139596167U,	// PMULLDrm_int
    138547591U,	// PMULLDrr
    138547591U,	// PMULLDrr_int
    139594930U,	// PMULLWrm
    138546354U,	// PMULLWrr
    139594938U,	// PMULUDQrm
    138546362U,	// PMULUDQrr
    134222223U,	// POP16r
    268439951U,	// POP16rmm
    134222223U,	// POP16rmr
    134222223U,	// POP32r
    402657679U,	// POP32rmm
    134222223U,	// POP32rmr
    134222223U,	// POP64r
    536875407U,	// POP64rmm
    134222223U,	// POP64rmr
    4500U,	// POPFD
    4500U,	// POPFQ
    139594947U,	// PORrm
    138546371U,	// PORrr
    671093145U,	// PREFETCHNTA
    671093158U,	// PREFETCHT0
    671093170U,	// PREFETCHT1
    671093182U,	// PREFETCHT2
    139594952U,	// PSADBWrm
    138546376U,	// PSADBWrr
    139596234U,	// PSHUFBrm128
    138940874U,	// PSHUFBrm64
    138547658U,	// PSHUFBrr128
    138547658U,	// PSHUFBrr64
    140923346U,	// PSHUFDmi
    139874770U,	// PSHUFDri
    140923354U,	// PSHUFHWmi
    139874778U,	// PSHUFHWri
    140923363U,	// PSHUFLWmi
    139874787U,	// PSHUFLWri
    139596268U,	// PSIGNBrm128
    138940908U,	// PSIGNBrm64
    138547692U,	// PSIGNBrr128
    138547692U,	// PSIGNBrr64
    139596276U,	// PSIGNDrm128
    138940916U,	// PSIGNDrm64
    138547700U,	// PSIGNDrr128
    138547700U,	// PSIGNDrr64
    139596284U,	// PSIGNWrm128
    138940924U,	// PSIGNWrm64
    138547708U,	// PSIGNWrr128
    138547708U,	// PSIGNWrr64
    138547716U,	// PSLLDQri
    138546392U,	// PSLLDri
    139594968U,	// PSLLDrm
    138546392U,	// PSLLDrr
    138546399U,	// PSLLQri
    139594975U,	// PSLLQrm
    138546399U,	// PSLLQrr
    138546406U,	// PSLLWri
    139594982U,	// PSLLWrm
    138546406U,	// PSLLWrr
    138546413U,	// PSRADri
    139594989U,	// PSRADrm
    138546413U,	// PSRADrr
    138546420U,	// PSRAWri
    139594996U,	// PSRAWrm
    138546420U,	// PSRAWrr
    138547724U,	// PSRLDQri
    138546427U,	// PSRLDri
    139595003U,	// PSRLDrm
    138546427U,	// PSRLDrr
    138546434U,	// PSRLQri
    139595010U,	// PSRLQrm
    138546434U,	// PSRLQrr
    138546441U,	// PSRLWri
    139595017U,	// PSRLWrm
    138546441U,	// PSRLWrr
    139595024U,	// PSUBBrm
    138546448U,	// PSUBBrr
    139595031U,	// PSUBDrm
    138546455U,	// PSUBDrr
    139595038U,	// PSUBQrm
    138546462U,	// PSUBQrr
    139595045U,	// PSUBSBrm
    138546469U,	// PSUBSBrr
    139595053U,	// PSUBSWrm
    138546477U,	// PSUBSWrr
    139595061U,	// PSUBUSBrm
    138546485U,	// PSUBUSBrr
    139595070U,	// PSUBUSWrm
    138546494U,	// PSUBUSWrr
    139595079U,	// PSUBWrm
    138546503U,	// PSUBWrr
    140907028U,	// PTESTrm
    139858452U,	// PTESTrr
    139595086U,	// PUNPCKHBWrm
    138546510U,	// PUNPCKHBWrr
    139595097U,	// PUNPCKHDQrm
    138546521U,	// PUNPCKHDQrr
    139596316U,	// PUNPCKHQDQrm
    138547740U,	// PUNPCKHQDQrr
    139595108U,	// PUNPCKHWDrm
    138546532U,	// PUNPCKHWDrr
    139595119U,	// PUNPCKLBWrm
    138546543U,	// PUNPCKLBWrr
    139595130U,	// PUNPCKLDQrm
    138546554U,	// PUNPCKLDQrr
    139596328U,	// PUNPCKLQDQrm
    138547752U,	// PUNPCKLQDQrr
    139595141U,	// PUNPCKLWDrm
    138546565U,	// PUNPCKLWDrr
    134222388U,	// PUSH16r
    268440116U,	// PUSH16rmm
    134222388U,	// PUSH16rmr
    134222388U,	// PUSH32i16
    134222388U,	// PUSH32i32
    134222388U,	// PUSH32i8
    134222388U,	// PUSH32r
    402657844U,	// PUSH32rmm
    134222388U,	// PUSH32rmr
    134222388U,	// PUSH64i16
    134222388U,	// PUSH64i32
    134222388U,	// PUSH64i8
    134222388U,	// PUSH64r
    536875572U,	// PUSH64rmm
    134222388U,	// PUSH64rmr
    4666U,	// PUSHFD
    4666U,	// PUSHFQ
    139593875U,	// PXORrm
    138545299U,	// PXORrr
    356520512U,	// RCL16m1
    360714816U,	// RCL16mCL
    275649088U,	// RCL16mi
    222302784U,	// RCL16r1
    226497088U,	// RCL16rCL
    138547776U,	// RCL16ri
    490738240U,	// RCL32m1
    494932544U,	// RCL32mCL
    409866816U,	// RCL32mi
    222302784U,	// RCL32r1
    226497088U,	// RCL32rCL
    138547776U,	// RCL32ri
    624955968U,	// RCL64m1
    629150272U,	// RCL64mCL
    544084544U,	// RCL64mi
    222302784U,	// RCL64r1
    226497088U,	// RCL64rCL
    138547776U,	// RCL64ri
    759173696U,	// RCL8m1
    763368000U,	// RCL8mCL
    678302272U,	// RCL8mi
    222302784U,	// RCL8r1
    226497088U,	// RCL8rCL
    138547776U,	// RCL8ri
    140382789U,	// RCPPSm
    140382789U,	// RCPPSm_Int
    139858501U,	// RCPPSr
    139858501U,	// RCPPSr_Int
    140644940U,	// RCPSSm
    140644940U,	// RCPSSm_Int
    139858508U,	// RCPSSr
    139858508U,	// RCPSSr_Int
    356520531U,	// RCR16m1
    360714835U,	// RCR16mCL
    275649107U,	// RCR16mi
    222302803U,	// RCR16r1
    226497107U,	// RCR16rCL
    138547795U,	// RCR16ri
    490738259U,	// RCR32m1
    494932563U,	// RCR32mCL
    409866835U,	// RCR32mi
    222302803U,	// RCR32r1
    226497107U,	// RCR32rCL
    138547795U,	// RCR32ri
    624955987U,	// RCR64m1
    629150291U,	// RCR64mCL
    544084563U,	// RCR64mi
    222302803U,	// RCR64r1
    226497107U,	// RCR64rCL
    138547795U,	// RCR64ri
    759173715U,	// RCR8m1
    763368019U,	// RCR8mCL
    678302291U,	// RCR8mi
    222302803U,	// RCR8r1
    226497107U,	// RCR8rCL
    138547795U,	// RCR8ri
    4696U,	// RDTSC
    4702U,	// REP_MOVSB
    4712U,	// REP_MOVSD
    4722U,	// REP_MOVSQ
    4732U,	// REP_MOVSW
    4742U,	// REP_STOSB
    4752U,	// REP_STOSD
    4762U,	// REP_STOSQ
    4772U,	// REP_STOSW
    4782U,	// RET
    134222514U,	// RETI
    268440247U,	// ROL16m1
    360714935U,	// ROL16mCL
    272634551U,	// ROL16mi
    134222519U,	// ROL16r1
    226497207U,	// ROL16rCL
    138547895U,	// ROL16ri
    402657975U,	// ROL32m1
    494932663U,	// ROL32mCL
    406852279U,	// ROL32mi
    134222519U,	// ROL32r1
    226497207U,	// ROL32rCL
    138547895U,	// ROL32ri
    536875703U,	// ROL64m1
    633344695U,	// ROL64mCL
    541070007U,	// ROL64mi
    134222519U,	// ROL64r1
    230691511U,	// ROL64rCL
    138547895U,	// ROL64ri
    671093431U,	// ROL8m1
    763368119U,	// ROL8mCL
    675287735U,	// ROL8mi
    134222519U,	// ROL8r1
    226497207U,	// ROL8rCL
    138547895U,	// ROL8ri
    268440252U,	// ROR16m1
    360714940U,	// ROR16mCL
    272634556U,	// ROR16mi
    134222524U,	// ROR16r1
    226497212U,	// ROR16rCL
    138547900U,	// ROR16ri
    402657980U,	// ROR32m1
    494932668U,	// ROR32mCL
    406852284U,	// ROR32mi
    134222524U,	// ROR32r1
    226497212U,	// ROR32rCL
    138547900U,	// ROR32ri
    536875708U,	// ROR64m1
    633344700U,	// ROR64mCL
    541070012U,	// ROR64mi
    134222524U,	// ROR64r1
    230691516U,	// ROR64rCL
    138547900U,	// ROR64ri
    671093436U,	// ROR8m1
    763368124U,	// ROR8mCL
    675287740U,	// ROR8mi
    134222524U,	// ROR8r1
    226497212U,	// ROR8rCL
    138547900U,	// ROR8ri
    140399297U,	// ROUNDPDm_Int
    139875009U,	// ROUNDPDr_Int
    140399306U,	// ROUNDPSm_Int
    139875018U,	// ROUNDPSr_Int
    139350739U,	// ROUNDSDm_Int
    138564307U,	// ROUNDSDr_Int
    139481820U,	// ROUNDSSm_Int
    138564316U,	// ROUNDSSr_Int
    140382949U,	// RSQRTPSm
    140382949U,	// RSQRTPSm_Int
    139858661U,	// RSQRTPSr
    139858661U,	// RSQRTPSr_Int
    140645102U,	// RSQRTSSm
    140645102U,	// RSQRTSSm_Int
    139858670U,	// RSQRTSSr
    139858670U,	// RSQRTSSr_Int
    4855U,	// SAHF
    268440316U,	// SAR16m1
    360715004U,	// SAR16mCL
    272634620U,	// SAR16mi
    134222588U,	// SAR16r1
    226497276U,	// SAR16rCL
    138547964U,	// SAR16ri
    402658044U,	// SAR32m1
    494932732U,	// SAR32mCL
    406852348U,	// SAR32mi
    134222588U,	// SAR32r1
    226497276U,	// SAR32rCL
    138547964U,	// SAR32ri
    536875772U,	// SAR64m1
    633344764U,	// SAR64mCL
    541070076U,	// SAR64mi
    134222588U,	// SAR64r1
    230691580U,	// SAR64rCL
    138547964U,	// SAR64ri
    671093500U,	// SAR8m1
    763368188U,	// SAR8mCL
    675287804U,	// SAR8mi
    134222588U,	// SAR8r1
    226497276U,	// SAR8rCL
    138547964U,	// SAR8ri
    134222593U,	// SBB16i16
    272634635U,	// SBB16mi
    272634635U,	// SBB16mi8
    272634635U,	// SBB16mr
    138547979U,	// SBB16ri
    138547979U,	// SBB16ri8
    138679051U,	// SBB16rm
    138547979U,	// SBB16rr
    134222608U,	// SBB32i32
    406852363U,	// SBB32mi
    406852363U,	// SBB32mi8
    406852363U,	// SBB32mr
    138547979U,	// SBB32ri
    138547979U,	// SBB32ri8
    138810123U,	// SBB32rm
    138547979U,	// SBB32rr
    134222619U,	// SBB64i32
    541070091U,	// SBB64mi32
    541070091U,	// SBB64mi8
    541070091U,	// SBB64mr
    138547979U,	// SBB64ri32
    138547979U,	// SBB64ri8
    138941195U,	// SBB64rm
    138547979U,	// SBB64rr
    134222630U,	// SBB8i8
    675287819U,	// SBB8mi
    675287819U,	// SBB8mr
    138547979U,	// SBB8ri
    139072267U,	// SBB8rm
    138547979U,	// SBB8rr
    4912U,	// SCAS16
    4912U,	// SCAS32
    4912U,	// SCAS64
    4912U,	// SCAS8
    671093557U,	// SETAEm
    134222645U,	// SETAEr
    671093564U,	// SETAm
    134222652U,	// SETAr
    671093570U,	// SETBEm
    134222658U,	// SETBEr
    140776203U,	// SETB_C16r
    140776203U,	// SETB_C32r
    140776203U,	// SETB_C64r
    140776203U,	// SETB_C8r
    671093577U,	// SETBm
    134222665U,	// SETBr
    671093583U,	// SETEm
    134222671U,	// SETEr
    671093589U,	// SETGEm
    134222677U,	// SETGEr
    671093596U,	// SETGm
    134222684U,	// SETGr
    671093602U,	// SETLEm
    134222690U,	// SETLEr
    671093609U,	// SETLm
    134222697U,	// SETLr
    671093615U,	// SETNEm
    134222703U,	// SETNEr
    671093622U,	// SETNOm
    134222710U,	// SETNOr
    671093629U,	// SETNPm
    134222717U,	// SETNPr
    671093636U,	// SETNSm
    134222724U,	// SETNSr
    671093643U,	// SETOm
    134222731U,	// SETOr
    671093649U,	// SETPm
    134222737U,	// SETPr
    671093655U,	// SETSm
    134222743U,	// SETSr
    5021U,	// SFENCE
    268440484U,	// SHL16m1
    360715172U,	// SHL16mCL
    272634788U,	// SHL16mi
    134222756U,	// SHL16r1
    226497444U,	// SHL16rCL
    138548132U,	// SHL16ri
    402658212U,	// SHL32m1
    494932900U,	// SHL32mCL
    406852516U,	// SHL32mi
    134222756U,	// SHL32r1
    226497444U,	// SHL32rCL
    138548132U,	// SHL32ri
    536875940U,	// SHL64m1
    633344932U,	// SHL64mCL
    541070244U,	// SHL64mi
    134222761U,	// SHL64r1
    230691748U,	// SHL64rCL
    138548132U,	// SHL64ri
    671093668U,	// SHL8m1
    763368356U,	// SHL8mCL
    675287972U,	// SHL8mi
    134222756U,	// SHL8r1
    226497444U,	// SHL8rCL
    138548132U,	// SHL8ri
    272700334U,	// SHLD16mrCL
    272651182U,	// SHLD16mri8
    138613678U,	// SHLD16rrCL
    138564526U,	// SHLD16rri8
    406918062U,	// SHLD32mrCL
    406868910U,	// SHLD32mri8
    138613678U,	// SHLD32rrCL
    138564526U,	// SHLD32rri8
    541152174U,	// SHLD64mrCL
    541086638U,	// SHLD64mri8
    138630062U,	// SHLD64rrCL
    138564526U,	// SHLD64rri8
    268440489U,	// SHR16m1
    360715177U,	// SHR16mCL
    272634793U,	// SHR16mi
    134222761U,	// SHR16r1
    226497449U,	// SHR16rCL
    138548137U,	// SHR16ri
    402658217U,	// SHR32m1
    494932905U,	// SHR32mCL
    406852521U,	// SHR32mi
    134222761U,	// SHR32r1
    226497449U,	// SHR32rCL
    138548137U,	// SHR32ri
    536875945U,	// SHR64m1
    633344937U,	// SHR64mCL
    541070249U,	// SHR64mi
    134222761U,	// SHR64r1
    230691753U,	// SHR64rCL
    138548137U,	// SHR64ri
    671093673U,	// SHR8m1
    763368361U,	// SHR8mCL
    675287977U,	// SHR8mi
    134222761U,	// SHR8r1
    226497449U,	// SHR8rCL
    138548137U,	// SHR8ri
    272700340U,	// SHRD16mrCL
    272651188U,	// SHRD16mri8
    138613684U,	// SHRD16rrCL
    138564532U,	// SHRD16rri8
    406918068U,	// SHRD32mrCL
    406868916U,	// SHRD32mri8
    138613684U,	// SHRD32rrCL
    138564532U,	// SHRD32rri8
    541152180U,	// SHRD64mrCL
    541086644U,	// SHRD64mri8
    138630068U,	// SHRD64rrCL
    138564532U,	// SHRD64rri8
    139219898U,	// SHUFPDrmi
    138564538U,	// SHUFPDrri
    139219906U,	// SHUFPSrmi
    138564546U,	// SHUFPSrri
    5066U,	// SIN_F
    0U,	// SIN_Fp32
    0U,	// SIN_Fp64
    0U,	// SIN_Fp80
    140383183U,	// SQRTPDm
    140383183U,	// SQRTPDm_Int
    139858895U,	// SQRTPDr
    139858895U,	// SQRTPDr_Int
    140383191U,	// SQRTPSm
    140383191U,	// SQRTPSm_Int
    139858903U,	// SQRTPSr
    139858903U,	// SQRTPSr_Int
    140514271U,	// SQRTSDm
    140514271U,	// SQRTSDm_Int
    139858911U,	// SQRTSDr
    139858911U,	// SQRTSDr_Int
    140645351U,	// SQRTSSm
    140645351U,	// SQRTSSm_Int
    139858919U,	// SQRTSSr
    139858919U,	// SQRTSSr_Int
    5103U,	// SQRT_F
    0U,	// SQRT_Fp32
    0U,	// SQRT_Fp64
    0U,	// SQRT_Fp80
    402658293U,	// STMXCSR
    805311486U,	// ST_F32m
    939529214U,	// ST_F64m
    805311491U,	// ST_FP32m
    939529219U,	// ST_FP64m
    2013271043U,	// ST_FP80m
    134222851U,	// ST_FPrr
    0U,	// ST_Fp32m
    0U,	// ST_Fp64m
    0U,	// ST_Fp64m32
    0U,	// ST_Fp80m32
    0U,	// ST_Fp80m64
    0U,	// ST_FpP32m
    0U,	// ST_FpP64m
    0U,	// ST_FpP64m32
    0U,	// ST_FpP80m
    0U,	// ST_FpP80m32
    0U,	// ST_FpP80m64
    134222846U,	// ST_Frr
    134222857U,	// SUB16i16
    272634899U,	// SUB16mi
    272634899U,	// SUB16mi8
    272634899U,	// SUB16mr
    138548243U,	// SUB16ri
    138548243U,	// SUB16ri8
    138679315U,	// SUB16rm
    138548243U,	// SUB16rr
    134222872U,	// SUB32i32
    406852627U,	// SUB32mi
    406852627U,	// SUB32mi8
    406852627U,	// SUB32mr
    138548243U,	// SUB32ri
    138548243U,	// SUB32ri8
    138810387U,	// SUB32rm
    138548243U,	// SUB32rr
    134222883U,	// SUB64i32
    541070355U,	// SUB64mi32
    541070355U,	// SUB64mi8
    541070355U,	// SUB64mr
    138548243U,	// SUB64ri32
    138548243U,	// SUB64ri8
    138941459U,	// SUB64rm
    138548243U,	// SUB64rr
    134222894U,	// SUB8i8
    675288083U,	// SUB8mi
    675288083U,	// SUB8mr
    138548243U,	// SUB8ri
    139072531U,	// SUB8rm
    138548243U,	// SUB8rr
    139203640U,	// SUBPDrm
    138548280U,	// SUBPDrr
    139203647U,	// SUBPSrm
    138548287U,	// SUBPSrr
    805311558U,	// SUBR_F32m
    939529286U,	// SUBR_F64m
    268440653U,	// SUBR_FI16m
    402658381U,	// SUBR_FI32m
    134222933U,	// SUBR_FPrST0
    134222918U,	// SUBR_FST0r
    0U,	// SUBR_Fp32m
    0U,	// SUBR_Fp64m
    0U,	// SUBR_Fp64m32
    0U,	// SUBR_Fp80m32
    0U,	// SUBR_Fp80m64
    0U,	// SUBR_FpI16m32
    0U,	// SUBR_FpI16m64
    0U,	// SUBR_FpI16m80
    0U,	// SUBR_FpI32m32
    0U,	// SUBR_FpI32m64
    0U,	// SUBR_FpI32m80
    142611526U,	// SUBR_FrST0
    139334749U,	// SUBSDrm
    139334749U,	// SUBSDrm_Int
    138548317U,	// SUBSDrr
    138548317U,	// SUBSDrr_Int
    139465828U,	// SUBSSrm
    139465828U,	// SUBSSrm_Int
    138548324U,	// SUBSSrr
    138548324U,	// SUBSSrr_Int
    805311595U,	// SUB_F32m
    939529323U,	// SUB_F64m
    268440689U,	// SUB_FI16m
    402658417U,	// SUB_FI32m
    134222968U,	// SUB_FPrST0
    134222955U,	// SUB_FST0r
    0U,	// SUB_Fp32
    0U,	// SUB_Fp32m
    0U,	// SUB_Fp64
    0U,	// SUB_Fp64m
    0U,	// SUB_Fp64m32
    0U,	// SUB_Fp80
    0U,	// SUB_Fp80m32
    0U,	// SUB_Fp80m64
    0U,	// SUB_FpI16m32
    0U,	// SUB_FpI16m64
    0U,	// SUB_FpI16m80
    0U,	// SUB_FpI32m32
    0U,	// SUB_FpI32m64
    0U,	// SUB_FpI32m80
    142611563U,	// SUB_FrST0
    5247U,	// SYSCALL
    5255U,	// SYSENTER
    5264U,	// SYSEXIT
    5264U,	// SYSEXIT64
    5272U,	// SYSRET
    1174407723U,	// TAILJMPd
    503319083U,	// TAILJMPm
    234883627U,	// TAILJMPr
    234883627U,	// TAILJMPr64
    239080607U,	// TCRETURNdi
    239080607U,	// TCRETURNdi64
    239080607U,	// TCRETURNri
    239080607U,	// TCRETURNri64
    134223019U,	// TEST16i16
    272635062U,	// TEST16mi
    139859126U,	// TEST16ri
    139728054U,	// TEST16rm
    139859126U,	// TEST16rr
    134223036U,	// TEST32i32
    406852790U,	// TEST32mi
    139859126U,	// TEST32ri
    139990198U,	// TEST32rm
    139859126U,	// TEST32rr
    134223048U,	// TEST64i32
    541070518U,	// TEST64mi32
    139859126U,	// TEST64ri32
    140121270U,	// TEST64rm
    139859126U,	// TEST64rr
    134223060U,	// TEST8i8
    675288246U,	// TEST8mi
    139859126U,	// TEST8ri
    140252342U,	// TEST8rm
    139859126U,	// TEST8rr
    2952795359U,	// TLS_addr32
    3087013093U,	// TLS_addr64
    5367U,	// TRAP
    5371U,	// TST_F
    0U,	// TST_Fp32
    0U,	// TST_Fp64
    0U,	// TST_Fp80
    140511723U,	// UCOMISDrm
    139856363U,	// UCOMISDrr
    140642804U,	// UCOMISSrm
    139856372U,	// UCOMISSrr
    134223104U,	// UCOM_FIPr
    134223121U,	// UCOM_FIr
    5409U,	// UCOM_FPPr
    134223145U,	// UCOM_FPr
    0U,	// UCOM_FpIr32
    0U,	// UCOM_FpIr64
    0U,	// UCOM_FpIr80
    0U,	// UCOM_Fpr32
    0U,	// UCOM_Fpr64
    0U,	// UCOM_Fpr80
    134223153U,	// UCOM_Fr
    139203896U,	// UNPCKHPDrm
    138548536U,	// UNPCKHPDrr
    139203906U,	// UNPCKHPSrm
    138548546U,	// UNPCKHPSrr
    139203916U,	// UNPCKLPDrm
    138548556U,	// UNPCKLPDrr
    139203926U,	// UNPCKLPSrm
    138548566U,	// UNPCKLPSrr
    139875680U,	// VASTART_SAVE_XMM_REGS
    140773564U,	// V_SET0
    140774449U,	// V_SETALLONES
    5496U,	// WAIT
    536871932U,	// WINCALL64m
    1073742844U,	// WINCALL64pcrel32
    134218748U,	// WINCALL64r
    2147489149U,	// XCHG16rm
    1799361917U,	// XCHG32rm
    2281706877U,	// XCHG64rm
    2415924605U,	// XCHG8rm
    134223235U,	// XCH_F
    134223241U,	// XOR16i16
    272633266U,	// XOR16mi
    272633266U,	// XOR16mi8
    272633266U,	// XOR16mr
    138546610U,	// XOR16ri
    138546610U,	// XOR16ri8
    138677682U,	// XOR16rm
    138546610U,	// XOR16rr
    134223251U,	// XOR32i32
    406850994U,	// XOR32mi
    406850994U,	// XOR32mi8
    406850994U,	// XOR32mr
    138546610U,	// XOR32ri
    138546610U,	// XOR32ri8
    138808754U,	// XOR32rm
    138546610U,	// XOR32rr
    134223262U,	// XOR64i32
    541068722U,	// XOR64mi32
    541068722U,	// XOR64mi8
    541068722U,	// XOR64mr
    138546610U,	// XOR64ri32
    138546610U,	// XOR64ri8
    138939826U,	// XOR64rm
    138546610U,	// XOR64rr
    134223273U,	// XOR8i8
    675286450U,	// XOR8mi
    675286450U,	// XOR8mr
    138546610U,	// XOR8ri
    139070898U,	// XOR8rm
    138546610U,	// XOR8rr
    139200693U,	// XORPDrm
    138545333U,	// XORPDrr
    139200700U,	// XORPSrm
    138545340U,	// XORPSrr
    0U
  };

  const char *AsmStrs = 
    "fabs\000adc\t%ax, \000adc\t\000adc\t%eax, \000adc\t%rax, \000adc\t%al, "
    "\000add\t%ax, \000add\t\000add\t%eax, \000add\t%rax, \000add\t%al, \000"
    "addpd\t\000addps\t\000addsd\t\000addss\t\000addsubpd\t\000addsubps\t\000"
    "fadd\t\000fiadd\t\000faddp\t\000#ADJCALLSTACKDOWN\000#ADJCALLSTACKUP\000"
    "and\t%ax, \000and\t\000and\t%eax, \000and\t%rax, \000and\t%al, \000andn"
    "pd\t\000andnps\t\000andpd\t\000andps\t\000#ATOMADD6432 PSEUDO!\000#ATOM"
    "AND16 PSEUDO!\000#ATOMAND32 PSEUDO!\000#ATOMAND64 PSEUDO!\000#ATOMAND64"
    "32 PSEUDO!\000#ATOMAND8 PSEUDO!\000#ATOMMAX16 PSEUDO!\000#ATOMMAX32 PSE"
    "UDO!\000#ATOMMAX64 PSEUDO!\000#ATOMMIN16 PSEUDO!\000#ATOMMIN32 PSEUDO!\000"
    "#ATOMMIN64 PSEUDO!\000#ATOMNAND16 PSEUDO!\000#ATOMNAND32 PSEUDO!\000#AT"
    "OMNAND64 PSEUDO!\000#ATOMNAND6432 PSEUDO!\000#ATOMNAND8 PSEUDO!\000#ATO"
    "MOR16 PSEUDO!\000#ATOMOR32 PSEUDO!\000#ATOMOR64 PSEUDO!\000#ATOMOR6432 "
    "PSEUDO!\000#ATOMOR8 PSEUDO!\000#ATOMSUB6432 PSEUDO!\000#ATOMSWAP6432 PS"
    "EUDO!\000#ATOMUMAX16 PSEUDO!\000#ATOMUMAX32 PSEUDO!\000#ATOMUMAX64 PSEU"
    "DO!\000#ATOMUMIN16 PSEUDO!\000#ATOMUMIN32 PSEUDO!\000#ATOMUMIN64 PSEUDO"
    "!\000#ATOMXOR16 PSEUDO!\000#ATOMXOR32 PSEUDO!\000#ATOMXOR64 PSEUDO!\000"
    "#ATOMXOR6432 PSEUDO!\000#ATOMXOR8 PSEUDO!\000blendpd\t\000blendps\t\000"
    "blendvpd\t\000blendvps\t\000bsf\t\000bsr\t\000bswap\t\000bt\t\000call\t"
    "\000cbw\000cdq\000cdqe\000fchs\000clflush\t\000cmova\t\000cmovae\t\000c"
    "movb\t\000cmovbe\t\000fcmovbe\t%ST(0), \000fcmovb\t%ST(0), \000cmove\t\000"
    "fcmove\t%ST(0), \000cmovg\t\000cmovge\t\000cmovl\t\000cmovle\t\000fcmov"
    "nbe\t%ST(0), \000fcmovnb\t%ST(0), \000cmovne\t\000fcmovne\t%ST(0), \000"
    "cmovno\t\000cmovnp\t\000fcmovnu\t%ST(0), \000cmovns\t\000cmovo\t\000cmo"
    "vp\t\000fcmovu\t %ST(0), \000cmovs\t\000#CMOV_FR32 PSEUDO!\000#CMOV_FR6"
    "4 PSEUDO!\000#CMOV_GR8 PSEUDO!\000#CMOV_V1I64 PSEUDO!\000#CMOV_V2F64 PS"
    "EUDO!\000#CMOV_V2I64 PSEUDO!\000#CMOV_V4F32 PSEUDO!\000cmp\t%ax, \000cm"
    "p\t\000cmp\t%eax, \000cmp\t%rax, \000cmp\t%al, \000cmp\000cmps\000comis"
    "d\t\000fcos\000cqo\000crc32 \t\000cvtdq2pd\t\000cvtdq2ps\t\000cvtpd2dq\t"
    "\000cvtps2dq\t\000cvtsd2ss\t\000cvtsi2sd\t\000cvtsi2ss\t\000cvtss2sd\t\000"
    "cvttsd2si\t\000cvttss2si\t\000cwd\000cwde\000dec\t\000div\t\000divpd\t\000"
    "divps\t\000fdivr\t\000fidivr\t\000fdivrp\t\000divsd\t\000divss\t\000fdi"
    "v\t\000fidiv\t\000fdivp\t\000dppd\t\000dpps\t\000ret\t#eh_return, addr:"
    " \000enter\t\000extractps\t\000lcall\t\000ljmp\t\000fbld\t\000fbstp\t\000"
    "fcom\t\000fcomp\t\000ficom\t\000ficomp\t\000fisttp\t\000fldcw\t\000flde"
    "nv\t\000fnstcw\t\000fnstsw\000##FP32_TO_INT16_IN_MEM PSEUDO!\000##FP32_"
    "TO_INT32_IN_MEM PSEUDO!\000##FP32_TO_INT64_IN_MEM PSEUDO!\000##FP64_TO_"
    "INT16_IN_MEM PSEUDO!\000##FP64_TO_INT32_IN_MEM PSEUDO!\000##FP64_TO_INT"
    "64_IN_MEM PSEUDO!\000##FP80_TO_INT16_IN_MEM PSEUDO!\000##FP80_TO_INT32_"
    "IN_MEM PSEUDO!\000##FP80_TO_INT64_IN_MEM PSEUDO!\000##FP_REG_KILL\000fr"
    "stor\t\000fsave\t\000fstenv\t\000fstsw\t\000movl\t%fs:\000pxor\t\000mov"
    "apd\t\000movaps\t\000orpd\t\000orps\t\000xorpd\t\000xorps\t\000movl\t%g"
    "s:\000haddpd\t\000haddps\t\000hsubpd\t\000hsubps\t\000idiv\t\000fild\t\000"
    "imul\t\000in\t%AX, \000in\t%AX, %DX\000in\t%EAX, \000in\t%EAX, %DX\000i"
    "n\t%AL, \000in\t%AL, %DX\000inc\t\000insertps\t\000int\t\000int\t3\000f"
    "ist\t\000fistp\t\000comiss\t\000cvtpd2pi\t\000cvtpd2ps\t\000cvtpi2pd\t\000"
    "cvtpi2ps\t\000cvtps2pd\t\000cvtps2pi\t\000cvtsd2si\t\000cvtss2si\t\000c"
    "vttpd2dq\t\000cvttpd2pi\t\000cvttps2dq\t\000cvttps2pi\t\000ucomisd\t\000"
    "ucomiss\t\000ja\t\000jae\t\000jb\t\000jbe\t\000jcxz\t\000je\t\000jg\t\000"
    "jge\t\000jl\t\000jle\t\000jmp\t\000jne\t\000jno\t\000jnp\t\000jns\t\000"
    "jo\t\000jp\t\000js\t\000lahf\000lar\t\000lock\n\tcmpxchg\t\000lock\n\tc"
    "mpxchgq\t\000lock\n\tcmpxchg8b\t\000lddqu\t\000ldmxcsr\t\000fldz\000fld"
    "1\000fld\t\000lea\t\000leave\000lfence\000lock\n\tadd\t\000lock\n\tdec\t"
    "\000lock\n\tinc\t\000lock\n\tsub\t\000lodsb\000lodsd\000lodsq\000lodsw\000"
    "loop\t\000loope\t\000loopne\t\000lret\000lret\t\000lock\n\txadd\t\000ma"
    "skmovdqu\t\000maxpd\t\000maxps\t\000maxsd\t\000maxss\t\000mfence\000min"
    "pd\t\000minps\t\000minsd\t\000minss\t\000emms\000femms\000maskmovq\t\000"
    "movd\t\000movdq2q\t\000movntq\t\000movq2dq\t\000movq\t\000packssdw\t\000"
    "packsswb\t\000packuswb\t\000paddb\t\000paddd\t\000paddq\t\000paddsb\t\000"
    "paddsw\t\000paddusb\t\000paddusw\t\000paddw\t\000pandn\t\000pand\t\000p"
    "avgb\t\000pavgw\t\000pcmpeqb\t\000pcmpeqd\t\000pcmpeqw\t\000pcmpgtb\t\000"
    "pcmpgtd\t\000pcmpgtw\t\000pextrw\t\000pinsrw\t\000pmaddwd\t\000pmaxsw\t"
    "\000pmaxub\t\000pminsw\t\000pminub\t\000pmovmskb\t\000pmulhuw\t\000pmul"
    "hw\t\000pmullw\t\000pmuludq\t\000por\t\000psadbw\t\000pshufw\t\000pslld"
    "\t\000psllq\t\000psllw\t\000psrad\t\000psraw\t\000psrld\t\000psrlq\t\000"
    "psrlw\t\000psubb\t\000psubd\t\000psubq\t\000psubsb\t\000psubsw\t\000psu"
    "busb\t\000psubusw\t\000psubw\t\000punpckhbw\t\000punpckhdq\t\000punpckh"
    "wd\t\000punpcklbw\t\000punpckldq\t\000punpcklwd\t\000monitor\000mov\t\000"
    "mov\t%ax, \000mov\t%eax, \000xor\t\000movq\t%fs:\000movq\t%gs:\000mov\t"
    "%rax, \000movabs\t\000mov\t%al, \000movddup\t\000movdqa\t\000movdqu\t\000"
    "movhlps\t\000movhpd\t\000movhps\t\000movlhps\t\000movlpd\t\000movsd\t\000"
    "movlps\t\000movss\t\000movmskpd\t\000movmskps\t\000movntdqa\t\000movntd"
    "q\t\000movnti\t\000movntpd\t\000movntps\t\000movshdup\t\000movsldup\t\000"
    "movsx\t\000movsxd\t\000movupd\t\000movups\t\000movzx\t\000mpsadbw\t\000"
    "mul\t\000mulpd\t\000mulps\t\000mulsd\t\000mulss\t\000fmul\t\000fimul\t\000"
    "fmulp\t\000mwait\000neg\t\000nop\000nopl\t\000not\t\000or\t%ax, \000or\t"
    "\000or\t%eax, \000or\t%rax, \000or\t%al, \000out\t\000out\t%DX, %AX\000"
    "out\t%DX, %EAX\000out\t%DX, %AL\000pabsb\t\000pabsd\t\000pabsw\t\000pac"
    "kusdw\t\000palignr\t\000pblendvb\t\000pblendw\t\000pcmpeqq\t\000pcmpest"
    "ri\t\000#PCMPESTRM128rm PSEUDO!\000#PCMPESTRM128rr PSEUDO!\000pcmpestrm"
    "\t\000pcmpgtq\t\000pcmpistri\t\000#PCMPISTRM128rm PSEUDO!\000#PCMPISTRM"
    "128rr PSEUDO!\000pcmpistrm\t\000pextrb\t\000pextrd\t\000pextrq\t\000pha"
    "ddd\t\000phaddsw\t\000phaddw\t\000phminposuw\t\000phsubd\t\000phsubsw\t"
    "\000phsubw\t\000pinsrb\t\000pinsrd\t\000pinsrq\t\000pmaddubsw\t\000pmax"
    "sb\t\000pmaxsd\t\000pmaxud\t\000pmaxuw\t\000pminsb\t\000pminsd\t\000pmi"
    "nud\t\000pminuw\t\000pmovsxbd\t\000pmovsxbq\t\000pmovsxbw\t\000pmovsxdq"
    "\t\000pmovsxwd\t\000pmovsxwq\t\000pmovzxbd\t\000pmovzxbq\t\000pmovzxbw\t"
    "\000pmovzxdq\t\000pmovzxwd\t\000pmovzxwq\t\000pmuldq\t\000pmulhrsw\t\000"
    "pmulld\t\000pop\t\000popf\000prefetchnta\t\000prefetcht0\t\000prefetcht"
    "1\t\000prefetcht2\t\000pshufb\t\000pshufd\t\000pshufhw\t\000pshuflw\t\000"
    "psignb\t\000psignd\t\000psignw\t\000pslldq\t\000psrldq\t\000ptest \t\000"
    "punpckhqdq\t\000punpcklqdq\t\000push\t\000pushf\000rcl\t\000rcpps\t\000"
    "rcpss\t\000rcr\t\000rdtsc\000rep movsb\000rep movsd\000rep movsq\000rep"
    " movsw\000rep stosb\000rep stosd\000rep stosq\000rep stosw\000ret\000re"
    "t\t\000rol\t\000ror\t\000roundpd\t\000roundps\t\000roundsd\t\000roundss"
    "\t\000rsqrtps\t\000rsqrtss\t\000sahf\000sar\t\000sbb\t%ax, \000sbb\t\000"
    "sbb\t%eax, \000sbb\t%rax, \000sbb\t%al, \000scas\000setae\t\000seta\t\000"
    "setbe\t\000setb\t\000sete\t\000setge\t\000setg\t\000setle\t\000setl\t\000"
    "setne\t\000setno\t\000setnp\t\000setns\t\000seto\t\000setp\t\000sets\t\000"
    "sfence\000shl\t\000shr\t\000shld\t\000shrd\t\000shufpd\t\000shufps\t\000"
    "fsin\000sqrtpd\t\000sqrtps\t\000sqrtsd\t\000sqrtss\t\000fsqrt\000stmxcs"
    "r\t\000fst\t\000fstp\t\000sub\t%ax, \000sub\t\000sub\t%eax, \000sub\t%r"
    "ax, \000sub\t%al, \000subpd\t\000subps\t\000fsubr\t\000fisubr\t\000fsub"
    "rp\t\000subsd\t\000subss\t\000fsub\t\000fisub\t\000fsubp\t\000syscall\000"
    "sysenter\000sysexit\000sysret\000#TC_RETURN \000test\t%ax, \000test\t\000"
    "test\t%eax, \000test\t%rax, \000test\t%al, \000leal\t\000.byte\t0x66; l"
    "eaq\t\000ud2\000ftst\000fucomip\t%ST(0), \000fucomi\t%ST(0), \000fucomp"
    "p\000fucomp\t\000fucom\t\000unpckhpd\t\000unpckhps\t\000unpcklpd\t\000u"
    "npcklps\t\000#VASTART_SAVE_XMM_REGS \000wait\000xchg\t\000fxch\t\000xor"
    "\t%ax, \000xor\t%eax, \000xor\t%rax, \000xor\t%al, \000";


#ifndef NO_ASM_WRITER_BOILERPLATE
  if (MI->getOpcode() == TargetInstrInfo::INLINEASM) {
    printInlineAsm(MI);
    return;
  } else if (MI->isLabel()) {
    printLabel(MI);
    return;
  } else if (MI->getOpcode() == TargetInstrInfo::IMPLICIT_DEF) {
    printImplicitDef(MI);
    return;
  } else if (MI->getOpcode() == TargetInstrInfo::KILL) {
    printKill(MI);
    return;
  }


#endif
  O << "\t";

  // Emit the opcode for the instruction.
  unsigned Bits = OpInfo[MI->getOpcode()];
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 5 bits for 24 unique commands.
  switch ((Bits >> 27) & 31) {
  default:   // unreachable.
  case 0:
    // ABS_F, ADJCALLSTACKDOWN32, ADJCALLSTACKDOWN64, ADJCALLSTACKUP32, ADJCA...
    return;
    break;
  case 1:
    // ADC16i16, ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC32i32, ADC32ri, ADC3...
    printOperand(MI, 0); 
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADD16mi, ADD16mi8, ADD16mr, ADD_FI16m, AND...
    printi16mem(MI, 0); 
    break;
  case 3:
    // ADC32mi, ADC32mi8, ADC32mr, ADD32mi, ADD32mi8, ADD32mr, ADD_FI32m, AND...
    printi32mem(MI, 0); 
    break;
  case 4:
    // ADC64mi32, ADC64mi8, ADC64mr, ADD64mi32, ADD64mi8, ADD64mr, AND64mi32,...
    printi64mem(MI, 0); 
    break;
  case 5:
    // ADC8mi, ADC8mr, ADD8mi, ADD8mr, AND8mi, AND8mr, CLFLUSH, CMP8mi, CMP8m...
    printi8mem(MI, 0); 
    break;
  case 6:
    // ADD_F32m, DIVR_F32m, DIV_F32m, EXTRACTPSmr, FBLDm, FBSTPm, FCOM32m, FC...
    printf32mem(MI, 0); 
    break;
  case 7:
    // ADD_F64m, DIVR_F64m, DIV_F64m, FCOM64m, FCOMP64m, LD_F64m, MOVHPDmr, M...
    printf64mem(MI, 0); 
    break;
  case 8:
    // CALL64pcrel32, CALLpcrel32, JA, JA8, JAE, JAE8, JB, JB8, JBE, JBE8, JC...
    print_pcrel_imm(MI, 0); 
    break;
  case 9:
    // CMPPDrmi, CMPPSrmi, CMPSDrm, CMPSSrm, Int_CMPSDrm, Int_CMPSSrm
    printSSECC(MI, 7); 
    break;
  case 10:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr
    printSSECC(MI, 3); 
    break;
  case 11:
    // CRC32m16, CRC32m32, CRC32m8, CRC32r16, CRC32r32, CRC32r8, CRC64m64, CR...
    printOperand(MI, 1); 
    O << ", "; 
    break;
  case 12:
    // FARCALL16m, FARCALL32m, FARCALL64, FARJMP16m, FARJMP32m, FARJMP64
    printopaquemem(MI, 0); 
    return;
    break;
  case 13:
    // FS_MOV32rm, GS_MOV32rm, LXADD32, XCHG32rm
    printi32mem(MI, 1); 
    O << ", "; 
    break;
  case 14:
    // LCMPXCHG64
    printOperand(MI, 5); 
    O << ','; 
    printi64mem(MI, 0); 
    return;
    break;
  case 15:
    // LD_F80m, ST_FP80m
    printf80mem(MI, 0); 
    return;
    break;
  case 16:
    // LXADD16, XCHG16rm
    printi16mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 6); 
    return;
    break;
  case 17:
    // LXADD64, XCHG64rm
    printOperand(MI, 6); 
    O << ", "; 
    printi64mem(MI, 1); 
    return;
    break;
  case 18:
    // LXADD8, XCHG8rm
    printi8mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 6); 
    return;
    break;
  case 19:
    // MOV64FSrm, MOV64GSrm
    printi64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 20:
    // MOVAPDmr, MOVAPSmr, MOVNTDQmr, MOVUPDmr, MOVUPDmr_Int, MOVUPSmr, MOVUP...
    printf128mem(MI, 0); 
    O << ", "; 
    printOperand(MI, 5); 
    return;
    break;
  case 21:
    // MOVDQAmr, MOVDQUmr, MOVDQUmr_Int, MOVNTPDmr, MOVNTPSmr
    printi128mem(MI, 0); 
    O << ", "; 
    printOperand(MI, 5); 
    return;
    break;
  case 22:
    // TLS_addr32
    printlea32mem(MI, 0); 
    O << ", %eax; call\t___tls_get_addr@PLT"; 
    return;
    break;
  case 23:
    // TLS_addr64
    printlea64mem(MI, 0); 
    O << "(%rip), %rdi; .word\t0x6666; rex64; call\t__tls_get_addr@PLT"; 
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 26 unique commands.
  switch ((Bits >> 22) & 31) {
  default:   // unreachable.
  case 0:
    // ADC16i16, ADC32i32, ADC64i32, ADC8i8, ADD16i16, ADD32i32, ADD64i32, AD...
    return;
    break;
  case 1:
    // ADC16mi, ADC16mi8, ADC16mr, ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC32...
    O << ", "; 
    break;
  case 2:
    // ADD_FrST0, DIVR_FrST0, DIV_FrST0, MUL_FrST0, SUBR_FrST0, SUB_FrST0
    O << ", %ST(0)"; 
    return;
    break;
  case 3:
    // CMPPDrmi, CMPPDrri
    O << "pd\t"; 
    printOperand(MI, 0); 
    O << ", "; 
    break;
  case 4:
    // CMPPSrmi, CMPPSrri
    O << "ps\t"; 
    printOperand(MI, 0); 
    O << ", "; 
    break;
  case 5:
    // CMPSDrm, CMPSDrr, Int_CMPSDrm, Int_CMPSDrr
    O << "sd\t"; 
    printOperand(MI, 0); 
    O << ", "; 
    break;
  case 6:
    // CMPSSrm, CMPSSrr, Int_CMPSSrm, Int_CMPSSrr
    O << "ss\t"; 
    printOperand(MI, 0); 
    O << ", "; 
    break;
  case 7:
    // CRC32m16
    printi16mem(MI, 2); 
    return;
    break;
  case 8:
    // CRC32m32
    printi32mem(MI, 2); 
    return;
    break;
  case 9:
    // CRC32m8
    printi8mem(MI, 2); 
    return;
    break;
  case 10:
    // CRC32r16, CRC32r32, CRC32r8, CRC64r64
    printOperand(MI, 2); 
    return;
    break;
  case 11:
    // CRC64m64
    printi64mem(MI, 2); 
    return;
    break;
  case 12:
    // FS_MOV32rm, GS_MOV32rm
    printOperand(MI, 0); 
    return;
    break;
  case 13:
    // LXADD32, XCHG32rm
    printOperand(MI, 6); 
    return;
    break;
  case 14:
    // MOV16ao16
    O << ", %ax"; 
    return;
    break;
  case 15:
    // MOV32ao32
    O << ", %eax"; 
    return;
    break;
  case 16:
    // MOV64ao32, MOV64ao8
    O << ", %rax"; 
    return;
    break;
  case 17:
    // MOV8ao8
    O << ", %al"; 
    return;
    break;
  case 18:
    // OUT16ir
    O << ", %AX"; 
    return;
    break;
  case 19:
    // OUT32ir
    O << ", %EAX"; 
    return;
    break;
  case 20:
    // OUT8ir
    O << ", %AL"; 
    return;
    break;
  case 21:
    // RCL16m1, RCL16r1, RCL32m1, RCL32r1, RCL64m1, RCL64r1, RCL8m1, RCL8r1, ...
    O << ", 1"; 
    return;
    break;
  case 22:
    // RCL16mCL, RCL16rCL, RCL32mCL, RCL32rCL, RCL64mCL, RCL64rCL, RCL8mCL, R...
    O << ", CL"; 
    return;
    break;
  case 23:
    // ROL64mCL, ROL64rCL, ROR64mCL, ROR64rCL, SAR64mCL, SAR64rCL, SHL64mCL, ...
    O << ", %CL"; 
    return;
    break;
  case 24:
    // TAILJMPd, TAILJMPm, TAILJMPr, TAILJMPr64
    O << "  # TAILCALL"; 
    return;
    break;
  case 25:
    // TCRETURNdi, TCRETURNdi64, TCRETURNri, TCRETURNri64
    O << ' '; 
    printOperand(MI, 1); 
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 24 unique commands.
  switch ((Bits >> 17) & 31) {
  default:   // unreachable.
  case 0:
    // ADC16mi, ADC16mi8, ADC16mr, ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC...
    printOperand(MI, 5); 
    break;
  case 1:
    // ADC16ri, ADC16ri8, ADC16rr, ADC32ri, ADC32ri8, ADC32rr, ADC64ri32, ADC...
    printOperand(MI, 2); 
    break;
  case 2:
    // ADC16rm, ADD16rm, AND16rm, CMOVA16rm, CMOVAE16rm, CMOVB16rm, CMOVBE16r...
    printi16mem(MI, 2); 
    break;
  case 3:
    // ADC32rm, ADD32rm, AND32rm, CMOVA32rm, CMOVAE32rm, CMOVB32rm, CMOVBE32r...
    printi32mem(MI, 2); 
    break;
  case 4:
    // ADC64rm, ADD64rm, AND64rm, CMOVA64rm, CMOVAE64rm, CMOVB64rm, CMOVBE64r...
    printi64mem(MI, 2); 
    break;
  case 5:
    // ADC8rm, ADD8rm, AND8rm, OR8rm, PINSRBrm, SBB8rm, SUB8rm, XOR8rm
    printi8mem(MI, 2); 
    break;
  case 6:
    // ADDPDrm, ADDPSrm, ADDSUBPDrm, ADDSUBPSrm, ANDNPDrm, ANDNPSrm, ANDPDrm,...
    printf128mem(MI, 2); 
    break;
  case 7:
    // ADDSDrm, ADDSDrm_Int, CMPSDrm, DIVSDrm, DIVSDrm_Int, Int_CMPSDrm, Int_...
    printf64mem(MI, 2); 
    break;
  case 8:
    // ADDSSrm, ADDSSrm_Int, CMPSSrm, DIVSSrm, DIVSSrm_Int, INSERTPSrm, Int_C...
    printf32mem(MI, 2); 
    break;
  case 9:
    // BLENDPDrmi, BLENDPSrmi, BLENDVPDrm0, BLENDVPSrm0, DPPDrmi, DPPSrmi, MP...
    printi128mem(MI, 2); 
    break;
  case 10:
    // BSF16rm, BSR16rm, CMP16rm, IMUL16rmi, IMUL16rmi8, LAR16rm, LAR32rm, LA...
    printi16mem(MI, 1); 
    break;
  case 11:
    // BSF16rr, BSF32rr, BSF64rr, BSR16rr, BSR32rr, BSR64rr, BT16ri8, BT16rr,...
    printOperand(MI, 1); 
    break;
  case 12:
    // BSF32rm, BSR32rm, CMP32rm, CVTSI2SDrm, CVTSI2SSrm, IMUL32rmi, IMUL32rm...
    printi32mem(MI, 1); 
    break;
  case 13:
    // BSF64rm, BSR64rm, CMP64rm, CVTSI2SD64rm, CVTSI2SS64rm, IMUL64rmi32, IM...
    printi64mem(MI, 1); 
    break;
  case 14:
    // CMP8rm, MOV8rm, MOV8rm_NOREX, MOVSX32rm8, MOVSX64rm8, MOVZX32_NOREXrm8...
    printi8mem(MI, 1); 
    break;
  case 15:
    // COMISDrm, CVTDQ2PDrm, CVTDQ2PSrm, CVTPD2DQrm, CVTPS2DQrm, FsMOVAPDrm, ...
    printf128mem(MI, 1); 
    break;
  case 16:
    // CVTSD2SSrm, CVTTSD2SI64rm, CVTTSD2SIrm, Int_CVTPS2PDrm, Int_CVTPS2PIrm...
    printf64mem(MI, 1); 
    return;
    break;
  case 17:
    // CVTSS2SDrm, CVTTSS2SI64rm, CVTTSS2SIrm, Int_CVTSS2SI64rm, Int_CVTSS2SI...
    printf32mem(MI, 1); 
    return;
    break;
  case 18:
    // FsFLD0SD, FsFLD0SS, MMX_V_SET0, MMX_V_SETALLONES, MOV32r0, MOV8r0, SET...
    printOperand(MI, 0); 
    return;
    break;
  case 19:
    // Int_CVTDQ2PSrm, LDDQUrm, MOVDQArm, MOVDQUrm, MOVDQUrm_Int, MOVNTDQArm,...
    printi128mem(MI, 1); 
    break;
  case 20:
    // LEA16r, LEA32r
    printlea32mem(MI, 1); 
    return;
    break;
  case 21:
    // LEA64_32r
    printlea64_32mem(MI, 1); 
    return;
    break;
  case 22:
    // LEA64r
    printlea64mem(MI, 1); 
    return;
    break;
  case 23:
    // RCL16mi, RCL32mi, RCL64mi, RCL8mi, RCR16mi, RCR32mi, RCR64mi, RCR8mi
    printOperand(MI, 10); 
    return;
    break;
  }


  // Fragment 3 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 14) & 7) {
  default:   // unreachable.
  case 0:
    // ADC16mi, ADC16mi8, ADC16mr, ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC32...
    return;
    break;
  case 1:
    // BLENDPDrmi, BLENDPDrri, BLENDPSrmi, BLENDPSrri, DPPDrmi, DPPDrri, DPPS...
    O << ", "; 
    break;
  case 2:
    // BLENDVPDrm0, BLENDVPDrr0, BLENDVPSrm0, BLENDVPSrr0, PBLENDVBrm0, PBLEN...
    O << ", %xmm0"; 
    return;
    break;
  case 3:
    // MOV8mr_NOREX, MOV8rm_NOREX, MOV8rr_NOREX, MOVZX32_NOREXrm8, MOVZX32_NO...
    O << "  # NOREX"; 
    return;
    break;
  case 4:
    // SHLD16mrCL, SHLD16rrCL, SHLD32mrCL, SHLD32rrCL, SHRD16mrCL, SHRD16rrCL...
    O << ", CL"; 
    return;
    break;
  case 5:
    // SHLD64mrCL, SHLD64rrCL, SHRD64mrCL, SHRD64rrCL
    O << ", %CL"; 
    return;
    break;
  }

  switch (MI->getOpcode()) {
  case X86::BLENDPDrmi:
  case X86::BLENDPDrri:
  case X86::BLENDPSrmi:
  case X86::BLENDPSrri:
  case X86::DPPDrmi:
  case X86::DPPDrri:
  case X86::DPPSrmi:
  case X86::DPPSrri:
  case X86::EXTRACTPSmr:
  case X86::EXTRACTPSrr:
  case X86::IMUL16rmi:
  case X86::IMUL16rmi8:
  case X86::IMUL16rri:
  case X86::IMUL16rri8:
  case X86::IMUL32rmi:
  case X86::IMUL32rmi8:
  case X86::IMUL32rri:
  case X86::IMUL32rri8:
  case X86::IMUL64rmi32:
  case X86::IMUL64rmi8:
  case X86::IMUL64rri32:
  case X86::IMUL64rri8:
  case X86::INSERTPSrm:
  case X86::INSERTPSrr:
  case X86::MMX_PEXTRWri:
  case X86::MMX_PINSRWrmi:
  case X86::MMX_PINSRWrri:
  case X86::MMX_PSHUFWmi:
  case X86::MMX_PSHUFWri:
  case X86::MPSADBWrmi:
  case X86::MPSADBWrri:
  case X86::PALIGNR128rm:
  case X86::PALIGNR128rr:
  case X86::PALIGNR64rm:
  case X86::PALIGNR64rr:
  case X86::PBLENDWrmi:
  case X86::PBLENDWrri:
  case X86::PCMPESTRIArm:
  case X86::PCMPESTRIArr:
  case X86::PCMPESTRICrm:
  case X86::PCMPESTRICrr:
  case X86::PCMPESTRIOrm:
  case X86::PCMPESTRIOrr:
  case X86::PCMPESTRISrm:
  case X86::PCMPESTRISrr:
  case X86::PCMPESTRIZrm:
  case X86::PCMPESTRIZrr:
  case X86::PCMPESTRIrm:
  case X86::PCMPESTRIrr:
  case X86::PCMPESTRM128rm:
  case X86::PCMPESTRM128rr:
  case X86::PCMPISTRIArm:
  case X86::PCMPISTRIArr:
  case X86::PCMPISTRICrm:
  case X86::PCMPISTRICrr:
  case X86::PCMPISTRIOrm:
  case X86::PCMPISTRIOrr:
  case X86::PCMPISTRISrm:
  case X86::PCMPISTRISrr:
  case X86::PCMPISTRIZrm:
  case X86::PCMPISTRIZrr:
  case X86::PCMPISTRIrm:
  case X86::PCMPISTRIrr:
  case X86::PCMPISTRM128rm:
  case X86::PCMPISTRM128rr:
  case X86::PEXTRBmr:
  case X86::PEXTRBrr:
  case X86::PEXTRDmr:
  case X86::PEXTRDrr:
  case X86::PEXTRQmr:
  case X86::PEXTRQrr:
  case X86::PEXTRWmr:
  case X86::PEXTRWri:
  case X86::PINSRBrm:
  case X86::PINSRBrr:
  case X86::PINSRDrm:
  case X86::PINSRDrr:
  case X86::PINSRQrm:
  case X86::PINSRQrr:
  case X86::PINSRWrmi:
  case X86::PINSRWrri:
  case X86::PSHUFDmi:
  case X86::PSHUFDri:
  case X86::PSHUFHWmi:
  case X86::PSHUFHWri:
  case X86::PSHUFLWmi:
  case X86::PSHUFLWri:
  case X86::ROUNDPDm_Int:
  case X86::ROUNDPDr_Int:
  case X86::ROUNDPSm_Int:
  case X86::ROUNDPSr_Int:
  case X86::ROUNDSDm_Int:
  case X86::ROUNDSDr_Int:
  case X86::ROUNDSSm_Int:
  case X86::ROUNDSSr_Int:
  case X86::SHLD16mri8:
  case X86::SHLD16rri8:
  case X86::SHLD32mri8:
  case X86::SHLD32rri8:
  case X86::SHLD64mri8:
  case X86::SHLD64rri8:
  case X86::SHRD16mri8:
  case X86::SHRD16rri8:
  case X86::SHRD32mri8:
  case X86::SHRD32rri8:
  case X86::SHRD64mri8:
  case X86::SHRD64rri8:
  case X86::SHUFPDrmi:
  case X86::SHUFPDrri:
  case X86::SHUFPSrmi:
  case X86::SHUFPSrri:
  case X86::VASTART_SAVE_XMM_REGS:
    switch (MI->getOpcode()) {
    case X86::BLENDPDrmi: 
    case X86::BLENDPSrmi: 
    case X86::DPPDrmi: 
    case X86::DPPSrmi: 
    case X86::INSERTPSrm: 
    case X86::MMX_PINSRWrmi: 
    case X86::MPSADBWrmi: 
    case X86::PALIGNR128rm: 
    case X86::PALIGNR64rm: 
    case X86::PBLENDWrmi: 
    case X86::PINSRBrm: 
    case X86::PINSRDrm: 
    case X86::PINSRQrm: 
    case X86::PINSRWrmi: 
    case X86::ROUNDSDm_Int: 
    case X86::ROUNDSSm_Int: 
    case X86::SHUFPDrmi: 
    case X86::SHUFPSrmi: printOperand(MI, 7); break;
    case X86::BLENDPDrri: 
    case X86::BLENDPSrri: 
    case X86::DPPDrri: 
    case X86::DPPSrri: 
    case X86::INSERTPSrr: 
    case X86::MMX_PINSRWrri: 
    case X86::MPSADBWrri: 
    case X86::PALIGNR128rr: 
    case X86::PALIGNR64rr: 
    case X86::PBLENDWrri: 
    case X86::PINSRBrr: 
    case X86::PINSRDrr: 
    case X86::PINSRQrr: 
    case X86::PINSRWrri: 
    case X86::ROUNDSDr_Int: 
    case X86::ROUNDSSr_Int: 
    case X86::SHLD16rri8: 
    case X86::SHLD32rri8: 
    case X86::SHLD64rri8: 
    case X86::SHRD16rri8: 
    case X86::SHRD32rri8: 
    case X86::SHRD64rri8: 
    case X86::SHUFPDrri: 
    case X86::SHUFPSrri: printOperand(MI, 3); break;
    case X86::EXTRACTPSmr: 
    case X86::IMUL16rmi: 
    case X86::IMUL16rmi8: 
    case X86::IMUL32rmi: 
    case X86::IMUL32rmi8: 
    case X86::IMUL64rmi32: 
    case X86::IMUL64rmi8: 
    case X86::MMX_PSHUFWmi: 
    case X86::PCMPESTRIArm: 
    case X86::PCMPESTRICrm: 
    case X86::PCMPESTRIOrm: 
    case X86::PCMPESTRISrm: 
    case X86::PCMPESTRIZrm: 
    case X86::PCMPESTRIrm: 
    case X86::PCMPESTRM128rm: 
    case X86::PCMPISTRIArm: 
    case X86::PCMPISTRICrm: 
    case X86::PCMPISTRIOrm: 
    case X86::PCMPISTRISrm: 
    case X86::PCMPISTRIZrm: 
    case X86::PCMPISTRIrm: 
    case X86::PCMPISTRM128rm: 
    case X86::PEXTRBmr: 
    case X86::PEXTRDmr: 
    case X86::PEXTRQmr: 
    case X86::PEXTRWmr: 
    case X86::PSHUFDmi: 
    case X86::PSHUFHWmi: 
    case X86::PSHUFLWmi: 
    case X86::ROUNDPDm_Int: 
    case X86::ROUNDPSm_Int: 
    case X86::SHLD16mri8: 
    case X86::SHLD32mri8: 
    case X86::SHLD64mri8: 
    case X86::SHRD16mri8: 
    case X86::SHRD32mri8: 
    case X86::SHRD64mri8: printOperand(MI, 6); break;
    case X86::EXTRACTPSrr: 
    case X86::IMUL16rri: 
    case X86::IMUL16rri8: 
    case X86::IMUL32rri: 
    case X86::IMUL32rri8: 
    case X86::IMUL64rri32: 
    case X86::IMUL64rri8: 
    case X86::MMX_PEXTRWri: 
    case X86::MMX_PSHUFWri: 
    case X86::PCMPESTRIArr: 
    case X86::PCMPESTRICrr: 
    case X86::PCMPESTRIOrr: 
    case X86::PCMPESTRISrr: 
    case X86::PCMPESTRIZrr: 
    case X86::PCMPESTRIrr: 
    case X86::PCMPESTRM128rr: 
    case X86::PCMPISTRIArr: 
    case X86::PCMPISTRICrr: 
    case X86::PCMPISTRIOrr: 
    case X86::PCMPISTRISrr: 
    case X86::PCMPISTRIZrr: 
    case X86::PCMPISTRIrr: 
    case X86::PCMPISTRM128rr: 
    case X86::PEXTRBrr: 
    case X86::PEXTRDrr: 
    case X86::PEXTRQrr: 
    case X86::PEXTRWri: 
    case X86::PSHUFDri: 
    case X86::PSHUFHWri: 
    case X86::PSHUFLWri: 
    case X86::ROUNDPDr_Int: 
    case X86::ROUNDPSr_Int: 
    case X86::VASTART_SAVE_XMM_REGS: printOperand(MI, 2); break;
    }
    return;
    break;
  }
  return;
}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *X86IntelInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 134 && "Invalid register number!");

  static const unsigned RegAsmOffset[] = {
    0, 3, 6, 9, 12, 15, 18, 22, 25, 28, 31, 34, 37, 40, 
    43, 47, 50, 53, 56, 60, 64, 68, 72, 76, 80, 86, 90, 93, 
    97, 101, 105, 109, 113, 117, 121, 125, 129, 132, 135, 138, 142, 146, 
    150, 154, 158, 162, 166, 170, 174, 179, 184, 189, 193, 198, 203, 208, 
    212, 217, 222, 227, 231, 236, 241, 246, 250, 255, 260, 265, 269, 274, 
    279, 284, 287, 291, 295, 299, 302, 306, 310, 314, 318, 322, 326, 330, 
    334, 338, 342, 346, 350, 353, 357, 360, 364, 367, 373, 379, 385, 391, 
    397, 403, 409, 415, 420, 425, 431, 437, 443, 449, 455, 461, 466, 471, 
    476, 481, 486, 491, 496, 501, 506, 511, 517, 523, 529, 535, 541, 547, 
    552, 557, 562, 567, 572, 577, 582, 0
  };

  const char *AsmStrs =
    "ah\000al\000ax\000bh\000bl\000bp\000bpl\000bx\000ch\000cl\000cs\000cx\000"
    "dh\000di\000dil\000dl\000ds\000dx\000eax\000ebp\000ebx\000ecx\000edi\000"
    "edx\000flags\000eip\000es\000esi\000esp\000fp0\000fp1\000fp2\000fp3\000"
    "fp4\000fp5\000fp6\000fs\000gs\000ip\000mm0\000mm1\000mm2\000mm3\000mm4\000"
    "mm5\000mm6\000mm7\000r10\000r10b\000r10d\000r10w\000r11\000r11b\000r11d"
    "\000r11w\000r12\000r12b\000r12d\000r12w\000r13\000r13b\000r13d\000r13w\000"
    "r14\000r14b\000r14d\000r14w\000r15\000r15b\000r15d\000r15w\000r8\000r8b"
    "\000r8d\000r8w\000r9\000r9b\000r9d\000r9w\000rax\000rbp\000rbx\000rcx\000"
    "rdi\000rdx\000rip\000rsi\000rsp\000si\000sil\000sp\000spl\000ss\000st(0"
    ")\000st(1)\000st(2)\000st(3)\000st(4)\000st(5)\000st(6)\000st(7)\000xmm"
    "0\000xmm1\000xmm10\000xmm11\000xmm12\000xmm13\000xmm14\000xmm15\000xmm2"
    "\000xmm3\000xmm4\000xmm5\000xmm6\000xmm7\000xmm8\000xmm9\000ymm0\000ymm"
    "1\000ymm10\000ymm11\000ymm12\000ymm13\000ymm14\000ymm15\000ymm2\000ymm3"
    "\000ymm4\000ymm5\000ymm6\000ymm7\000ymm8\000ymm9\000";
  return AsmStrs+RegAsmOffset[RegNo-1];
}
